{"version":3,"sources":["pages/FolderPage.js","pages/ItemPage.js","pages/LoginPage.js","pages/IndexPage.js","App.js","serviceWorker.js","index.js","widgets/ItemActions.js","utils/api2.js","RootStore.js"],"names":["observer","props","rootStore","useRootStore","folderId","qs","parse","location","search","slice","id","folder","folders","find","React","useEffect","loadItems","token","useState","isSubmitting","setIsSubmitting","className","style","paddingBottom","margin","items","length","randomItems","map","item","marginBottom","border","borderRadius","padding","key","to","title","marginTop","justifyContent","fontSize","color","origin","author","dayjs","updated","format","height","position","bottom","left","right","zIndex","onClick","reloadItems","disabled","flex","a","markItemsAsRead","reloadRandomItems","query","itemId","f","contentElement","summary","content","preprocessingInstructions","shouldPreprocessNode","node","name","preprocessNode","attribs","processingInstructions","shouldProcessNode","processNode","HtmlToReact","ProcessNodeDefinitions","processDefaultNode","HtmlToReactParser","parseWithInstructions","href","canonical","target","rel","background","fontWeight","dangerouslySetInnerHTML","__html","history","buttonStyle","account","password","state","setState","display","gridTemplateColumns","rowGap","columnGap","value","onChange","e","login","goBack","gridColumn","loadFolders","totalUnreadCounts","unreadCount","localStorage","getItem","loadToken","console","warn","toast","autoClose","closeButton","transition","cssTransition","enter","exit","duration","hideProgressBar","toastClassName","bodyClassName","path","component","require","default","Boolean","window","hostname","match","ReactDOM","render","StrictMode","RootStore","Provider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","ItemActions","removeItems","api2","api","axios","create","baseURL","timeout","request","method","url","args","options","actualArgs","headers","Authorization","data","stringify","params","result","log","toUpperCase","get","post","mobx","this","Email","Passwd","json","split","filter","l","forEach","line","idx","indexOf","substr","Auth","Error","setItem","tags","tag","test","loadUnreadCounts","bq_total_unreads","unreadCounts","unreadcounts","replace","count","c","itemsStr","JSON","output","s","xt","r","n","itemRefs","randomItemsStr","indics","Array","from","Set","fill","parseInt","Math","random","join","itemIds","field","some","includes","RootStoreContext","createContext","useContext"],"mappings":"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","file":"static/js/main.0451dc83.chunk.js","sourcesContent":["import dayjs from 'dayjs';\nimport { observer } from 'mobx-react';\nimport qs from 'qs';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useRootStore } from 'src/RootStore';\nimport ItemActions from 'src/widgets/ItemActions';\n\nexport default observer(function GroupPage(props) {\n  const rootStore = useRootStore();\n\n  const query = qs.parse(props.location.search.slice(1));\n  const { id: folderId } = query;\n  const folder = rootStore.folders?.find((folder) => folder.id === folderId);\n\n  React.useEffect(() => {\n    rootStore.loadItems({ folderId });\n  }, [rootStore, rootStore.token, folderId]);\n\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n\n  return (\n    <div className=\"flex-column\" style={{ paddingBottom: 4 }}>\n      <div style={{ margin: '4px 4px 0' }}>\n        {folder?.id}：{folder?.items?.length}\n      </div>\n\n      {folder?.randomItems?.map((item) => (\n        <div\n          style={{\n            margin: 4,\n            marginBottom: 0,\n            border: '1px solid black',\n            borderRadius: 4,\n            padding: 8,\n          }}\n        >\n          <Link key={item.id} to={`/Item?folderId=${folderId}&id=${item.id}`}>\n            <div>{item.title}</div>\n            <div\n              className=\"flex-row align-center\"\n              style={{ marginTop: 8, justifyContent: 'space-between', fontSize: 12, color: 'gray' }}\n            >\n              <div>\n                {item.origin.title} | {item.author}\n              </div>\n              <div>{dayjs(item.updated * 1000).format('YYYY-MM-DD HH:mm')}</div>\n            </div>\n          </Link>\n          <div\n            className=\"flex-row align-center\"\n            style={{ marginTop: 8, justifyContent: 'flex-end' }}\n          >\n            <ItemActions\n              item={item}\n              isSubmitting={isSubmitting}\n              setIsSubmitting={setIsSubmitting}\n            />\n          </div>\n        </div>\n      ))}\n\n      <div style={{ height: 50 }} />\n      <div\n        className=\"flex-row\"\n        style={{ position: 'fixed', bottom: 0, left: 0, right: 0, zIndex: 7, height: 50 }}\n      >\n        <button\n          onClick={() => {\n            setIsSubmitting(true);\n            rootStore.loadItems({ folderId, reloadItems: true });\n            setIsSubmitting(false);\n          }}\n          disabled={isSubmitting}\n          style={{ flex: 1 }}\n        >\n          reload folder items\n        </button>\n        <button\n          onClick={async () => {\n            setIsSubmitting(true);\n            await rootStore.markItemsAsRead(folder.randomItems.map((item) => item.id));\n            await rootStore.loadItems({ folderId });\n            setIsSubmitting(false);\n          }}\n          disabled={isSubmitting}\n          style={{ flex: 1 }}\n        >\n          mark them as read\n        </button>\n        <button\n          onClick={() => {\n            setIsSubmitting(true);\n            rootStore.loadItems({ folderId, reloadRandomItems: true });\n            setIsSubmitting(false);\n          }}\n          disabled={isSubmitting}\n          style={{ flex: 1 }}\n        >\n          reload random items\n        </button>\n      </div>\n    </div>\n  );\n});\n","import dayjs from 'dayjs';\nimport HtmlToReact, { Parser as HtmlToReactParser } from 'html-to-react';\nimport { observer } from 'mobx-react';\nimport qs from 'qs';\nimport React from 'react';\nimport { useRootStore } from 'src/RootStore';\nimport ItemActions from 'src/widgets/ItemActions';\n\nexport default observer(function ItemPage(props) {\n  const rootStore = useRootStore();\n\n  const query = qs.parse(props.location.search.slice(1));\n  const { folderId, id: itemId } = query;\n\n  React.useEffect(() => {\n    rootStore.loadItems({ folderId });\n  }, [rootStore, rootStore.token, folderId]);\n\n  const folder = rootStore.folders?.find((f) => f.id === folderId);\n  const item = folder?.randomItems?.find((item) => item.id === itemId);\n\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n\n  let contentElement = null;\n  if (item?.summary?.content) {\n    const preprocessingInstructions = [\n      {\n        shouldPreprocessNode: (node) => node.name === 'img',\n        preprocessNode: (node) => {\n          node.attribs = {\n            ...node.attribs,\n            style: `${node.attribs?.style || ''}; max-width: 100%; height: auto;`,\n          };\n        },\n      },\n      {\n        shouldPreprocessNode: (node) => node.name === 'pre',\n        preprocessNode: (node) => {\n          node.attribs = {\n            ...node.attribs,\n            style: `${node.attribs?.style || ''};\n              border: 1px solid lightgray;\n              padding: 2px;\n              overflow-x: auto;\n              white-space: pre;\n              font-size: 0.8rem;\n            `,\n          };\n        },\n      },\n    ];\n    const processNodeDefinitions = new HtmlToReact.ProcessNodeDefinitions(React);\n    const processingInstructions = [\n      {\n        shouldProcessNode: (node) => true,\n        processNode: processNodeDefinitions.processDefaultNode,\n      },\n    ];\n    const parser = new HtmlToReactParser();\n    contentElement = parser.parseWithInstructions(\n      item.summary.content,\n      () => true,\n      processingInstructions,\n      preprocessingInstructions,\n    );\n  }\n\n  return (\n    <div className=\"flex-column\">\n      <a\n        href={item?.canonical?.[0]?.href}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"flex-column\"\n        style={{\n          background: 'lightgray',\n          padding: 8,\n        }}\n      >\n        <div style={{ fontWeight: 'bold' }}>{item?.title}</div>\n        <div\n          className=\"flex-row align-center\"\n          style={{ marginTop: 8, justifyContent: 'space-between', fontSize: 12, color: 'gray' }}\n        >\n          <div>\n            {item?.origin?.title} | {item?.author}\n          </div>\n          <div>{dayjs(item?.updated * 1000).format('YYYY-MM-DD HH:mm')}</div>\n        </div>\n      </a>\n\n      <div style={{ margin: 8 }}>\n        {contentElement || <div dangerouslySetInnerHTML={{ __html: item?.summary?.content }} />}\n      </div>\n\n      <div style={{ height: 50 }} />\n      <div\n        className=\"flex-row\"\n        style={{ position: 'fixed', bottom: 0, left: 0, right: 0, zIndex: 7, height: 50 }}\n      >\n        <ItemActions\n          item={item}\n          history={props.history}\n          isSubmitting={isSubmitting}\n          setIsSubmitting={setIsSubmitting}\n          buttonStyle={{ flex: 1 }}\n        />\n      </div>\n    </div>\n  );\n});\n","import { observer } from 'mobx-react';\nimport React from 'react';\nimport { useRootStore } from 'src/RootStore';\n\nexport default observer(function LoginPage(props) {\n  const rootStore = useRootStore();\n\n  const [state, setState] = React.useState({\n    account: null,\n    password: null,\n    isSubmitting: false,\n  });\n\n  return (\n    <div\n      style={{\n        margin: 16,\n        display: 'grid',\n        gridTemplateColumns: 'auto 1fr',\n        rowGap: 16,\n        columnGap: 16,\n      }}\n    >\n      <div>account</div>\n      <input\n        value={state.account ?? ''}\n        onChange={(e) => setState({ ...state, account: e.target.value || null })}\n      />\n\n      <div>password</div>\n      <input\n        value={state.password ?? ''}\n        onChange={(e) => setState({ ...state, password: e.target.value || null })}\n      />\n\n      <button\n        onClick={async () => {\n          setState({ ...state, isSubmitting: true });\n          if (await rootStore.login(state.account, state.password)) {\n            props.history.goBack();\n          }\n          setState({ ...state, isSubmitting: false });\n        }}\n        disabled={state.isSubmitting}\n        style={{ gridColumn: '1 / span 2', padding: 8, fontSize: 14 }}\n      >\n        login\n      </button>\n    </div>\n  );\n});\n","import { observer } from 'mobx-react';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useRootStore } from 'src/RootStore';\n\nexport default observer(function IndexPage(props) {\n  const rootStore = useRootStore();\n\n  React.useEffect(() => {\n    rootStore.loadFolders();\n  }, [rootStore, rootStore.token]);\n\n  if (!rootStore.token) {\n    return (\n      <Link to=\"/Login\" style={{ margin: 8, border: '1px solid black', padding: 16 }}>\n        login\n      </Link>\n    );\n  }\n\n  return (\n    <div className=\"flex-column\">\n      <div style={{ margin: '4px 4px 0' }}>未读：{rootStore.totalUnreadCounts}</div>\n\n      {rootStore.folders?.map((folder) => (\n        <Link\n          key={folder.id}\n          to={`/Folder?id=${folder.id}`}\n          style={{ margin: '4px 4px 0', border: '1px solid black', borderRadius: 4, padding: 8 }}\n        >\n          {folder.id} ({folder.unreadCount})\n        </Link>\n      ))}\n    </div>\n  );\n});\n","import { observer } from 'mobx-react';\nimport React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { cssTransition, ToastContainer } from 'react-toastify';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport { useRootStore } from 'src/RootStore';\n\nexport default observer(function App() {\n  const rootStore = useRootStore();\n\n  React.useEffect(() => {\n    const loadToken = async () => {\n      try {\n        const token = await localStorage.getItem('token');\n        rootStore.loadToken(token);\n      } catch (ex) {\n        console.warn('App.loadToken error:', ex);\n        toast(`load storage error: ${ex}`);\n      }\n    };\n    loadToken();\n  }, [rootStore]);\n\n  return (\n    <div>\n      <ToastContainer\n        autoClose={4000}\n        closeButton={false}\n        transition={cssTransition({\n          enter: 'slideInDown',\n          exit: 'slideOutUp',\n          duration: 300,\n        })}\n        hideProgressBar\n        toastClassName=\"toast-border\"\n        bodyClassName=\"toast-body\"\n      />\n\n      <HashRouter>\n        <Switch>\n          <Route path=\"/Folder\" component={require('src/pages/FolderPage').default} />\n          <Route path=\"/Item\" component={require('src/pages/ItemPage').default} />\n\n          <Route path=\"/Login\" component={require('src/pages/LoginPage').default} />\n          <Route path=\"/\" component={require('src/pages/IndexPage').default} />\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport RootStore, { RootStoreContext } from 'src/RootStore';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RootStoreContext.Provider value={new RootStore()}>\n      <App />\n    </RootStoreContext.Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Fragment } from 'react';\nimport { useRootStore } from 'src/RootStore';\n\nexport default function ItemActions(props) {\n  const rootStore = useRootStore();\n  const { item, isSubmitting, setIsSubmitting } = props;\n\n  return (\n    <Fragment>\n      <button\n        onClick={async () => {\n          setIsSubmitting(true);\n          if (await rootStore.markItemsAsRead([item?.id])) {\n            if (props.history?.goBack) {\n              props.history.goBack();\n            }\n          }\n          setIsSubmitting(false);\n        }}\n        disabled={isSubmitting}\n        style={{ padding: '4px 8px', ...props.buttonStyle }}\n      >\n        mark as read\n      </button>\n      <a\n        href={item?.canonical?.[0]?.href}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"flex-row justify-center align-center\"\n        style={{\n          border: '1px solid lightgray',\n          borderRadius: 4,\n          background: 'white',\n          padding: '4px 8px',\n          ...props.buttonStyle,\n        }}\n      >\n        original link\n      </a>\n      <button\n        onClick={() => {\n          rootStore.removeItems([item?.id], 'randomItems');\n          if (props.history?.goBack) {\n            props.history.goBack();\n          }\n        }}\n        disabled={isSubmitting}\n        style={{ padding: '4px 8px', ...props.buttonStyle }}\n      >\n        later\n      </button>\n    </Fragment>\n  );\n}\n","import axios from 'axios';\nimport qs from 'qs';\n\nconst api2 = {};\n\nlet api = axios.create({\n  baseURL: 'https://fever.glacjay.info',\n  timeout: 30000,\n});\n\napi2.request = async (method, url, args, options) => {\n  try {\n    const actualArgs = {\n      ...args,\n    };\n    const headers = {\n      ...(api2.token ? { Authorization: `GoogleLogin auth=${api2.token}` } : {}),\n    };\n    const result = (\n      await api.request({\n        method,\n        url,\n        ...(method === 'post' ? { data: qs.stringify(actualArgs) } : { params: actualArgs }),\n        headers,\n      })\n    ).data;\n    if (options?.log !== false) {\n      console.log(method.toUpperCase(), url, args, result);\n    }\n    return result;\n  } catch (error) {\n    console.warn(method.toUpperCase(), url, args, error);\n    throw error;\n  }\n};\n\napi2.get = async (url, args, options) => {\n  return api2.request('get', url, args, options);\n};\napi2.post = async (url, args, options) => {\n  return api2.request('post', url, args, options);\n};\n\nexport default api2;\n","import * as mobx from 'mobx';\nimport React from 'react';\nimport { toast } from 'react-toastify';\nimport api2 from 'src/utils/api2';\n\nexport default class RootStore {\n  token = null;\n  folders = null;\n\n  constructor() {\n    mobx.makeAutoObservable(this);\n  }\n\n  loadToken(token) {\n    this.token = token;\n    api2.token = token;\n  }\n\n  *login(account, password) {\n    try {\n      const result = yield api2.post('/accounts/ClientLogin', { Email: account, Passwd: password });\n      const json = {};\n      result\n        .split('\\n')\n        .filter((l) => l)\n        .forEach((line) => {\n          const idx = line.indexOf('=');\n          if (idx > 0) {\n            json[line.substr(0, idx)] = line.substr(idx + 1);\n          } else {\n            json[line] = true;\n          }\n        });\n      if (!json.Auth) {\n        throw new Error('account or password incorrect');\n      }\n\n      this.token = json.Auth;\n      yield localStorage.setItem('token', this.token);\n      api2.token = this.token;\n      return true;\n    } catch (ex) {\n      console.warn('RootStore.login error:', ex);\n      toast(`login failed: ${ex}`);\n      return false;\n    }\n  }\n\n  *loadFolders() {\n    try {\n      if (!this.token) {\n        return;\n      }\n\n      this.folders = (yield api2.get('/reader/api/0/tag/list?output=json')).tags.filter((tag) =>\n        /\\/label\\//.test(tag.id),\n      );\n\n      yield this.loadUnreadCounts(this.folders);\n    } catch (ex) {\n      console.warn('RootStore.loadFolders error:', ex);\n      toast(`load folders error: ${ex}`);\n    }\n  }\n\n  *loadUnreadCounts(folders) {\n    const result = yield api2.get('/reader/api/0/unread-count?output=json');\n    this.totalUnreadCounts = result.bq_total_unreads;\n    const unreadCounts = result.unreadcounts;\n    for (const folder of folders) {\n      const folderId = folder.id?.replace(/\\d+/, '-');\n      const count = unreadCounts.find((c) => c.id === folderId);\n      if (count) {\n        folder.unreadCount = count.count;\n      }\n    }\n  }\n\n  *loadItems({ folderId, reloadItems, reloadRandomItems }) {\n    try {\n      if (!this.token || !folderId) {\n        return;\n      }\n      if (!this.folders) {\n        yield this.loadFolders();\n      }\n      const folder = this.folders?.find((f) => f.id === folderId);\n      if (!folder) {\n        return;\n      }\n\n      if (reloadItems) {\n        yield this.loadUnreadCounts([folder]);\n      }\n\n      if (reloadItems) {\n        folder.items = null;\n      }\n      if (reloadItems || reloadRandomItems) {\n        folder.randomItems = null;\n      }\n\n      let { items } = folder;\n      if (!(items?.length > 0) && !reloadItems) {\n        const itemsStr = yield localStorage.getItem('items:' + folderId);\n        if (itemsStr) {\n          items = JSON.parse(itemsStr);\n          folder.items = items;\n        }\n      }\n      if (!(items?.length > 0) || reloadItems) {\n        items = (yield api2.get('/reader/api/0/stream/items/ids', {\n          output: 'json',\n          s: folderId,\n          xt: 'user/-/state/com.google/read',\n          r: 'o',\n          n: 10000,\n        })).itemRefs;\n        folder.items = items;\n        yield localStorage.setItem('items:' + folderId, JSON.stringify(items));\n      }\n\n      let { randomItems } = folder;\n      if (!(randomItems?.length > 0) && !reloadRandomItems) {\n        const randomItemsStr = yield localStorage.getItem('randomItems:' + folderId);\n        if (randomItemsStr) {\n          randomItems = JSON.parse(randomItemsStr);\n          folder.randomItems = randomItems;\n        }\n      }\n      if (!(randomItems?.length > 0) || reloadItems || reloadRandomItems) {\n        const indics = Array.from(\n          new Set(\n            Array(7)\n              .fill()\n              .map(() => parseInt(Math.random() * items.length)),\n          ),\n        );\n        randomItems = (yield api2.get(\n          `/reader/api/0/stream/items/contents?output=json${indics\n            .map((idx) => `&i=${items[idx].id}`)\n            .join('')}`,\n        )).items.map((item, idx) => ({ ...item, id: items[idx].id }));\n        folder.randomItems = randomItems;\n        yield localStorage.setItem('randomItems:' + folderId, JSON.stringify(randomItems));\n      }\n    } catch (ex) {\n      console.warn('RootStore.loadItems error:', ex);\n      toast(`load items error: ${ex}`);\n    }\n  }\n\n  *markItemsAsRead(itemIds) {\n    try {\n      if (!this.token || !(itemIds?.length > 0)) {\n        return false;\n      }\n\n      yield api2.post(`/reader/api/0/edit-tag?${itemIds.map((id) => `i=${id}`).join('&')}`, {\n        a: 'user/-/state/com.google/read',\n      });\n\n      yield this.removeItems(itemIds, 'items');\n      yield this.removeItems(itemIds, 'randomItems');\n\n      return true;\n    } catch (ex) {\n      console.warn('RootStore.markItemsAsRead error:', ex);\n      toast(`mark item as read error: ${ex}`);\n      return false;\n    }\n  }\n\n  *removeItems(itemIds, field) {\n    for (const folder of this.folders || []) {\n      if (folder[field]?.some((item) => itemIds.includes(item.id))) {\n        folder[field] = folder[field].filter((item) => !itemIds.includes(item.id));\n        yield localStorage.setItem(`${field}:${folder.id}`, JSON.stringify(folder[field]));\n      }\n    }\n  }\n}\n\nexport const RootStoreContext = React.createContext(null);\n\nexport function useRootStore() {\n  return React.useContext(RootStoreContext);\n}\n"],"sourceRoot":""}