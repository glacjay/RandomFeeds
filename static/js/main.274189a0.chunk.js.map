{"version":3,"sources":["pages/FolderPage.js","pages/ItemPage.js","utils/api2.js","pages/LoginPage.js","pages/IndexPage.js","App.js","serviceWorker.js","index.js","widgets/ItemActions.js","RootStore.js"],"names":["observer","props","rootStore","useRootStore","folderId","qs","parse","location","search","slice","id","folder","folders","find","React","useState","isSubmitting","setIsSubmitting","className","style","paddingBottom","margin","items","length","unreadCount","randomItems","map","item","marginBottom","border","borderRadius","padding","to","title","marginTop","justifyContent","fontSize","color","origin","author","dayjs","updated","format","height","position","bottom","left","right","zIndex","onClick","a","markItemsAsRead","loadItems","disabled","flex","query","itemId","f","contentElement","summary","content","preprocessingInstructions","shouldPreprocessNode","node","name","preprocessNode","attribs","processingInstructions","shouldProcessNode","processNode","HtmlToReact","ProcessNodeDefinitions","processDefaultNode","HtmlToReactParser","parseWithInstructions","href","canonical","target","rel","background","fontWeight","dangerouslySetInnerHTML","__html","history","buttonStyle","api2","api","axios","create","baseURL","timeout","request","method","url","args","options","actualArgs","headers","token","Authorization","data","stringify","params","result","log","console","toUpperCase","warn","response","status","push","get","post","account","password","state","setState","display","gridTemplateColumns","rowGap","columnGap","value","onChange","e","type","login","goBack","gridColumn","useEffect","loadFolders","totalUnreadCounts","localStorage","getItem","loadToken","toast","autoClose","closeButton","transition","cssTransition","enter","exit","duration","hideProgressBar","toastClassName","bodyClassName","HistoryGetter","path","component","require","default","useHistory","Boolean","window","hostname","match","ReactDOM","render","StrictMode","RootStore","Provider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","ItemActions","removeItems","mobx","this","Email","Passwd","json","split","filter","l","forEach","line","idx","indexOf","substr","Auth","Error","setItem","tags","tag","test","subscriptions","sub","categories","some","cat","loadUnreadCounts","bq_total_unreads","unreadCounts","unreadcounts","replace","count","c","subCount","reloadItems","i","j","Math","floor","random","totalUnreadCount","reduce","acc","feeds","Object","values","Promise","all","keys","subId","output","s","xt","r","n","itemRefs","newItems","arr","itemIds","join","field","includes","JSON","RootStoreContext","createContext","useContext"],"mappings":"sPAQeA,uBAAS,SAAoBC,GAAQ,IAAD,MAC3CC,EAAYC,cAGNC,EADEC,IAAGC,MAAML,EAAMM,SAASC,OAAOC,MAAM,IAC3CC,GACFC,EAAM,UAAGT,EAAUU,eAAb,aAAG,EAAmBC,MAAK,SAACF,GAAD,OAAYA,EAAOD,KAAON,KALhB,EAOTU,IAAMC,UAAS,GAPN,mBAO1CC,EAP0C,KAO5BC,EAP4B,KASjD,OACE,sBAAKC,UAAU,cAAcC,MAAO,CAAEC,cAAe,GAArD,UACE,sBAAKD,MAAO,CAAEE,OAAQ,aAAtB,iBACGV,QADH,IACGA,OADH,EACGA,EAAQD,GADX,gBACgBC,QADhB,IACgBA,GADhB,UACgBA,EAAQW,aADxB,aACgB,EAAeC,OAD/B,WACwCZ,QADxC,IACwCA,OADxC,EACwCA,EAAQa,eAFlD,OAKGb,QALH,IAKGA,GALH,UAKGA,EAAQc,mBALX,aAKG,EAAqBC,KAAI,SAACC,GAAD,aACxB,sBAEER,MAAO,CACLE,OAAQ,EACRO,aAAc,EACdC,OAAQ,kBACRC,aAAc,EACdC,QAAS,GAPb,UAUE,eAAC,IAAD,CAAMC,GAAE,yBAAoB5B,EAApB,eAAmCuB,EAAKjB,IAAhD,UACE,8BAAMiB,EAAKM,QACX,sBACEf,UAAU,wBACVC,MAAO,CAAEe,UAAW,EAAGC,eAAgB,gBAAiBC,SAAU,GAAIC,MAAO,QAF/E,UAIE,0CACGV,EAAKW,cADR,aACG,EAAaL,MADhB,MAC0BN,EAAKY,UAE/B,8BAAMC,IAAqB,IAAfb,EAAKc,SAAgBC,OAAO,4BAG5C,qBACExB,UAAU,wBACVC,MAAO,CAAEe,UAAW,EAAGC,eAAgB,YAFzC,SAIE,cAAC,IAAD,CACE/B,SAAUA,EACVuB,KAAMA,EACNX,aAAcA,EACdC,gBAAiBA,QA7BhBU,EAAKjB,OAmCd,qBAAKS,MAAO,CAAEwB,OAAQ,MACtB,sBACEzB,UAAU,WACVC,MAAO,CAAEyB,SAAU,QAASC,OAAQ,EAAGC,KAAM,EAAGC,MAAO,EAAGC,OAAQ,EAAGL,OAAQ,IAF/E,UAIE,wBACEM,QAAO,sBAAE,sBAAAC,EAAA,6DACPjC,GAAgB,GADT,SAEDf,EAAUiD,gBAAgBxC,EAAOc,YAAYC,KAAI,SAACC,GAAD,OAAUA,EAAKjB,OAF/D,uBAGDR,EAAUkD,UAAU,CAAEhD,aAHrB,OAIPa,GAAgB,GAJT,2CAMToC,SAAUrC,EACVG,MAAO,CAAEmC,KAAM,GARjB,+BAYA,wBACEL,QAAS,WACPhC,GAAgB,GAChBf,EAAUkD,UAAU,CAAEhD,aACtBa,GAAgB,IAElBoC,SAAUrC,EACVG,MAAO,CAAEmC,KAAM,GAPjB,2C,4JCrEOtD,uBAAS,SAAkBC,GAAQ,IAAD,cACzCC,EAAYC,cAEZoD,EAAQlD,IAAGC,MAAML,EAAMM,SAASC,OAAOC,MAAM,IAC3CL,EAAyBmD,EAAzBnD,SAAcoD,EAAWD,EAAf7C,GAEZC,EAAM,UAAGT,EAAUU,eAAb,aAAG,EAAmBC,MAAK,SAAC4C,GAAD,OAAOA,EAAE/C,KAAON,KACjDuB,EAAI,OAAGhB,QAAH,IAAGA,GAAH,UAAGA,EAAQc,mBAAX,aAAG,EAAqBZ,MAAK,SAACc,GAAD,OAAUA,EAAKjB,KAAO8C,KAPd,EASP1C,IAAMC,UAAS,GATR,mBASxCC,EATwC,KAS1BC,EAT0B,KAW3CyC,EAAiB,KACrB,UAAI/B,QAAJ,IAAIA,GAAJ,UAAIA,EAAMgC,eAAV,aAAI,EAAeC,QAAS,CAC1B,IAAMC,EAA4B,CAChC,CACEC,qBAAsB,SAACC,GAAD,MAAwB,QAAdA,EAAKC,MACrCC,eAAgB,SAACF,GAAU,IAAD,EACxBA,EAAKG,QAAL,2BACKH,EAAKG,SADV,IAEE/C,MAAM,GAAD,QAAK,UAAA4C,EAAKG,eAAL,eAAc/C,QAAS,GAA5B,wCAIX,CACE2C,qBAAsB,SAACC,GAAD,MAAwB,QAAdA,EAAKC,MACrCC,eAAgB,SAACF,GAAU,IAAD,EACxBA,EAAKG,QAAL,2BACKH,EAAKG,SADV,IAEE/C,MAAM,GAAD,QAAK,UAAA4C,EAAKG,eAAL,eAAc/C,QAAS,GAA5B,qMAYPgD,EAAyB,CAC7B,CACEC,kBAAmB,SAACL,GAAD,OAAU,GAC7BM,YAJ2B,IAAIC,IAAYC,uBAAuBzD,KAI9B0D,qBAIxCd,GADe,IAAIe,UACKC,sBACtB/C,EAAKgC,QAAQC,SACb,kBAAM,IACNO,EACAN,GAIJ,OACE,sBAAK3C,UAAU,cAAf,UACE,oBACEyD,KAAI,OAAEhD,QAAF,IAAEA,GAAF,UAAEA,EAAMiD,iBAAR,iBAAE,EAAkB,UAApB,aAAE,EAAsBD,KAC5BE,OAAO,SACPC,IAAI,sBACJ5D,UAAU,cACVC,MAAO,CACL4D,WAAY,YACZhD,QAAS,GAPb,UAUE,qBAAKZ,MAAO,CAAE6D,WAAY,QAA1B,gBAAqCrD,QAArC,IAAqCA,OAArC,EAAqCA,EAAMM,QAC3C,sBACEf,UAAU,wBACVC,MAAO,CAAEe,UAAW,EAAGC,eAAgB,gBAAiBC,SAAU,GAAIC,MAAO,QAF/E,UAIE,uCACGV,QADH,IACGA,GADH,UACGA,EAAMW,cADT,aACG,EAAcL,MADjB,aAC2BN,QAD3B,IAC2BA,OAD3B,EAC2BA,EAAMY,UAEjC,8BAAMC,IAAsB,KAAZ,OAAJb,QAAI,IAAJA,OAAA,EAAAA,EAAMc,UAAgBC,OAAO,4BAI7C,qBAAKvB,MAAO,CAAEE,OAAQ,GAAtB,SACGqC,GAAkB,qBAAKuB,wBAAyB,CAAEC,OAAM,OAAEvD,QAAF,IAAEA,GAAF,UAAEA,EAAMgC,eAAR,aAAE,EAAeC,aAG5E,qBAAKzC,MAAO,CAAEwB,OAAQ,OACtB,qBACEzB,UAAU,WACVC,MAAO,CAAEyB,SAAU,QAASC,OAAQ,EAAGC,KAAM,EAAGC,MAAO,EAAGC,OAAQ,EAAGL,OAAQ,IAF/E,SAIE,cAAC,IAAD,CACEvC,SAAUA,EACVuB,KAAMA,EACNwD,QAASlF,EAAMkF,QACfnE,aAAcA,EACdC,gBAAiBA,EACjBmE,YAAa,CAAE9B,KAAM,c,oGCnGzB+B,EAAO,GAETC,EAAMC,IAAMC,OAAO,CACrBC,QAAS,6BACTC,QAAS,MAGXL,EAAKM,QAAL,+BAAAzC,EAAA,MAAe,WAAO0C,EAAQC,EAAKC,EAAMC,GAA1B,uBAAA7C,EAAA,sEAEL8C,EAFK,eAGNF,GAECG,EALK,eAMLZ,EAAKa,MAAQ,CAAEC,cAAc,oBAAD,OAAsBd,EAAKa,QAAY,IAN9D,SASHZ,EAAIK,QAAJ,yBACJC,SACAC,OACe,SAAXD,EAAoB,CAAEQ,KAAM/F,IAAGgG,UAAUL,IAAgB,CAAEM,OAAQN,IAHnE,IAIJC,aAbO,cAQLM,EARK,OAeTH,MACmB,KAAV,OAAPL,QAAO,IAAPA,OAAA,EAAAA,EAASS,MACXC,QAAQD,IAAIZ,EAAOc,cAAeb,EAAKC,EAAMS,GAjBpC,kBAmBJA,GAnBI,qCAqBXE,QAAQE,KAAKf,EAAOc,cAAeb,EAAKC,EAAxC,MACgC,OAA5B,2CAAOc,gBAAP,eAAiBC,QAtBV,wBAuBTxB,EAAKa,MAAQ,MACb,UAAIb,EAAKF,eAAT,aAAI,EAAc2B,OAChBzB,EAAKF,QAAQ2B,KAAK,UAzBX,gGAAf,4DAiCAzB,EAAK0B,IAAL,+BAAA7D,EAAA,MAAW,WAAO2C,EAAKC,EAAMC,GAAlB,SAAA7C,EAAA,+EACFmC,EAAKM,QAAQ,MAAOE,EAAKC,EAAMC,IAD7B,2CAAX,0DAGAV,EAAK2B,KAAL,+BAAA9D,EAAA,MAAY,WAAO2C,EAAKC,EAAMC,GAAlB,SAAA7C,EAAA,+EACHmC,EAAKM,QAAQ,OAAQE,EAAKC,EAAMC,IAD7B,2CAAZ,0DAIeV,O,wHC9CArF,uBAAS,SAAmBC,GAAQ,IAAD,IAC1CC,EAAYC,cAD8B,EAGtBW,IAAMC,SAAS,CACvCkG,QAAS,KACTC,SAAU,KACVlG,cAAc,IANgC,mBAGzCmG,EAHyC,KAGlCC,EAHkC,KAShD,OACE,sBACEjG,MAAO,CACLE,OAAQ,GACRgG,QAAS,OACTC,oBAAqB,WACrBC,OAAQ,GACRC,UAAW,IANf,UASE,0CACA,uBACEC,MAAK,UAAEN,EAAMF,eAAR,QAAmB,GACxBS,SAAU,SAACC,GAAD,OAAOP,EAAS,2BAAKD,GAAN,IAAaF,QAASU,EAAE9C,OAAO4C,OAAS,WAGnE,2CACA,uBACEG,KAAK,WACLH,MAAK,UAAEN,EAAMD,gBAAR,QAAoB,GACzBQ,SAAU,SAACC,GAAD,OAAOP,EAAS,2BAAKD,GAAN,IAAaD,SAAUS,EAAE9C,OAAO4C,OAAS,WAGpE,wBACExE,QAAO,sBAAE,sBAAAC,EAAA,6DACPkE,EAAS,2BAAKD,GAAN,IAAanG,cAAc,KAD5B,SAEGd,EAAU2H,MAAMV,EAAMF,QAASE,EAAMD,UAFxC,kCAGLjH,EAAMkF,QAAQ2C,SAHT,OAKPV,EAAS,2BAAKD,GAAN,IAAanG,cAAc,KAL5B,2CAOTqC,SAAU8D,EAAMnG,aAChBG,MAAO,CAAE4G,WAAY,aAAchG,QAAS,EAAGK,SAAU,IAT3D,0B,0FC/BSpC,uBAAS,SAAmBC,GAAQ,IAAD,EAC1CC,EAAYC,cAMlB,OAJAW,IAAMkH,WAAU,WACd9H,EAAU+H,gBACT,CAAC/H,EAAWA,EAAUgG,QAEpBhG,EAAUgG,MASb,sBAAKhF,UAAU,cAAf,UACE,sBAAKC,MAAO,CAAEE,OAAQ,aAAtB,+BAAyCnB,EAAUgI,qBADrD,UAGGhI,EAAUU,eAHb,aAGG,EAAmBc,KAAI,SAACf,GAAD,OACtB,eAAC,IAAD,CAEEqB,GAAE,qBAAgBrB,EAAOD,IACzBS,MAAO,CAAEE,OAAQ,YAAaQ,OAAQ,kBAAmBC,aAAc,EAAGC,QAAS,GAHrF,UAKGpB,EAAOD,GALV,KAKgBC,EAAOa,YALvB,MACOb,EAAOD,UAZhB,cAAC,IAAD,CAAMsB,GAAG,SAASb,MAAO,CAAEE,OAAQ,EAAGQ,OAAQ,kBAAmBE,QAAS,IAA1E,uB,wLCLS/B,eAAS,WACtB,IAAME,EAAYC,cAelB,OAbAW,IAAMkH,WAAU,YACC,uCAAG,4BAAA9E,EAAA,+EAEMiF,aAAaC,QAAQ,SAF3B,OAERlC,EAFQ,OAGdhG,EAAUmI,UAAUnC,GAHN,gDAKdO,QAAQE,KAAK,uBAAb,MACA2B,YAAM,uBAAD,cANS,yDAAH,qDASfD,KACC,CAACnI,IAGF,gCACE,cAAC,IAAD,CACEqI,UAAW,IACXC,aAAa,EACbC,WAAYC,YAAc,CACxBC,MAAO,cACPC,KAAM,aACNC,SAAU,MAEZC,iBAAe,EACfC,eAAe,eACfC,cAAc,eAGhB,eAAC,IAAD,WACE,cAACC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,UAAUC,UAAWC,EAAQ,KAAwBC,UACjE,cAAC,IAAD,CAAOH,KAAK,QAAQC,UAAWC,EAAQ,KAAsBC,UAE7D,cAAC,IAAD,CAAOH,KAAK,SAASC,UAAWC,EAAQ,KAAuBC,UAC/D,cAAC,IAAD,CAAOH,KAAK,IAAIC,UAAWC,EAAQ,KAAuBC,sBAOpE,SAASJ,IACP,IAAM9D,EAAUmE,cAMhB,OAJAxI,IAAMkH,WAAU,WACd3C,IAAKF,QAAUA,IACd,CAACA,IAEG,K,OCjDWoE,QACW,cAA7BC,OAAOjJ,SAASkJ,UAEe,UAA7BD,OAAOjJ,SAASkJ,UAEhBD,OAAOjJ,SAASkJ,SAASC,MACvB,2DCXNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAiBC,SAAlB,CAA2BtC,MAAO,IAAIqC,IAAtC,SACE,cAAC,EAAD,QAGJE,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLhE,QAAQgE,MAAMA,EAAMC,a,yHEtIb,SAASC,EAAY1K,GAAQ,IAAD,IACnCC,EAAYC,cACVwB,EAAwC1B,EAAxC0B,KAAMX,EAAkCf,EAAlCe,aAAcC,EAAoBhB,EAApBgB,gBAE5B,OACE,eAAC,WAAD,WACE,wBACEgC,QAAO,sBAAE,4BAAAC,EAAA,6DACPjC,GAAgB,GADT,SAEGf,EAAUiD,gBAAgB,QAACxB,QAAD,IAACA,OAAD,EAACA,EAAMjB,KAFpC,mCAGL,UAAIT,EAAMkF,eAAV,aAAI,EAAe2C,SACjB7H,EAAMkF,QAAQ2C,SAJX,OAOP7G,GAAgB,GAPT,2CASToC,SAAUrC,EACVG,MAAK,aAAIY,QAAS,WAAc9B,EAAMmF,aAXxC,0BAeA,mBACET,KAAI,OAAEhD,QAAF,IAAEA,GAAF,UAAEA,EAAMiD,iBAAR,iBAAE,EAAkB,UAApB,aAAE,EAAsBD,KAC5BE,OAAO,SACPC,IAAI,sBACJ5D,UAAU,uCACVC,MAAK,aACHU,OAAQ,sBACRC,aAAc,EACdiD,WAAY,QACZhD,QAAS,WACN9B,EAAMmF,aAVb,2BAeA,wBACEnC,QAAS,WAAO,IAAD,EACb/C,EAAU0K,YAAY,QAACjJ,QAAD,IAACA,OAAD,EAACA,EAAMjB,IAAK,gBAClC,UAAIT,EAAMkF,eAAV,aAAI,EAAe2C,SACjB7H,EAAMkF,QAAQ2C,UAGlBzE,SAAUrC,EACVG,MAAK,aAAIY,QAAS,WAAc9B,EAAMmF,aARxC,wB,8OClCe0E,E,WAInB,aAAe,yBAHf5D,MAAQ,KAGM,KAFdtF,QAAU,KAGRiK,IAAwBC,M,sDAGhB5E,GACR4E,KAAK5E,MAAQA,EACbb,IAAKa,MAAQA,I,wCAGRe,EAASC,G,yEAEG,O,kBAAM7B,IAAK2B,KAAK,wBAAyB,CAAE+D,MAAO9D,EAAS+D,OAAQ9D,I,UAA5EX,E,OACA0E,EAAO,GACb1E,EACG2E,MAAM,MACNC,QAAO,SAACC,GAAD,OAAOA,KACdC,SAAQ,SAACC,GACR,IAAMC,EAAMD,EAAKE,QAAQ,KACrBD,EAAM,EACRN,EAAKK,EAAKG,OAAO,EAAGF,IAAQD,EAAKG,OAAOF,EAAM,GAE9CN,EAAKK,IAAQ,KAGdL,EAAKS,K,sBACF,IAAIC,MAAM,iC,OAIlB,OADAb,KAAK5E,MAAQ+E,EAAKS,K,UACZvD,aAAayD,QAAQ,QAASd,KAAK5E,O,eACzCb,IAAKa,MAAQ4E,KAAK5E,M,mBACX,G,yCAEPO,QAAQE,KAAK,yBAAb,MACA2B,YAAM,iBAAD,c,mBACE,G,mMAMFwC,KAAK5E,M,iDAIM,O,SAAMb,IAAK0B,IAAI,sC,OAIR,OAJvB+D,KAAKlK,Q,OAAiEiL,KAAKV,QAAO,SAACW,GAAD,MAChF,YAAYC,KAAKD,EAAIpL,O,SAGM2E,IAAK0B,IAAI,+C,OAAhCiF,E,OACHA,c,cACkBlB,KAAKlK,S,IAA1B,I,iBAAWD,E,QACTA,EAAOqL,cAAgBA,EAAcb,QAAO,SAACc,GAAD,uBAC1CA,EAAIC,kBADsC,aAC1C,EAAgBC,MAAK,SAACC,GAAD,OAASA,EAAI1L,MAAJ,OAAWC,QAAX,IAAWA,OAAX,EAAWA,EAAQD,WAFrD,uBAAoC,I,8BAMpC,O,UAAMoK,KAAKuB,iBAAiBvB,KAAKlK,S,0DAEjC6F,QAAQE,KAAK,+BAAb,MACA2B,YAAM,uBAAD,c,6GAIS1H,G,+EACD,O,SAAMyE,IAAK0B,IAAI,0C,OAAxBR,E,OACNuE,KAAK5C,kBAAoB3B,EAAO+F,iBAC1BC,EAAehG,EAAOiG,a,cACP5L,G,IAArB,I,mBAAWD,E,QACHP,EAAQ,UAAGO,EAAOD,UAAV,aAAG,EAAW+L,QAAQ,MAAO,KACrCC,EAAQH,EAAa1L,MAAK,SAAC8L,GAAD,OAAOA,EAAEjM,KAAON,KAC5CsM,IACF/L,EAAOa,YAAckL,EAAMA,O,oBAGX/L,EAAOqL,eAAiB,I,yBAA/BC,E,QACHW,EAAWL,EAAa1L,MAAK,SAAC8L,GAAD,OAAOA,EAAEjM,KAAOuL,EAAIvL,MACnDkM,IACFX,EAAIzK,YAAcoL,EAASF,QAH/B,2BAA+C,I,gCAPjD,uBAA+B,I,+NAgBpBtM,E,EAAAA,SAAUyM,E,EAAAA,Y,SAEd/B,KAAK5E,OAAU9F,E,oDAGf0K,KAAKlK,Q,gBACR,O,SAAMkK,KAAK7C,c,UAEPtH,E,UAASmK,KAAKlK,e,aAAL,EAAcC,MAAK,SAAC4C,GAAD,OAAOA,EAAE/C,KAAON,K,uDAK9CyM,E,iBACF,O,UAAM/B,KAAKuB,iBAAiB,CAAC1L,I,QAQ/B,IALIkM,IACFlM,EAAOW,MAAQ,MAGX0K,E,YAAoBrL,EAAOqL,cAAcb,QAAO,SAACc,GAAD,OAASA,EAAIzK,YAAc,MACxEsL,EAAId,EAAczK,OAAS,EAAGuL,EAAI,EAAGA,IACtCC,EAAIC,KAAKC,MAAMD,KAAKE,UAAYJ,EAAI,IADO,EAEV,CAACd,EAAce,GAAIf,EAAcc,IAAvEd,EAAcc,GAFkC,KAE9Bd,EAAce,GAFgB,KAOnD,IAFII,EAAmBnB,EAAcoB,QAAO,SAACC,EAAKpB,GAAN,OAAcoB,EAAMpB,EAAIzK,cAAa,GAC3E8L,EAAQ,GAERR,EAAI,EACRS,OAAOC,OAAOF,GAAOF,QAAO,SAACC,EAAKV,GAAN,OAAYU,EAAMV,IAAG,GAAK,GAAKQ,EAAmB,EAC9EL,GAAKA,EAAI,GAAKd,EAAczK,OAEvB+L,EAAMtB,EAAcc,GAAGpM,MAC1B4M,EAAMtB,EAAcc,GAAGpM,IAAM,GAE3B4M,EAAMtB,EAAcc,GAAGpM,IAAMsL,EAAcc,GAAGtL,cAChD8L,EAAMtB,EAAcc,GAAGpM,KAAO,GAEhCyM,GAAoB,EAGL,O,UAAMM,QAAQC,IAC7BH,OAAOI,KAAKL,GAAO5L,IAAnB,iBAAA6L,OAAA,IAAAA,CAAA,UACE,WAAOK,GAAP,SAAA1K,EAAA,sEAEUmC,IAAK0B,IAAI,iCAAkC,CAC/C8G,OAAQ,OACRC,EAAGF,EACHG,GAAI,+BACJC,EAAG,IACHC,EAAGX,EAAMM,KAPf,uCASIM,UATJ,2CADF,wD,QAekB,OAhBdC,E,OAcNxN,EAAOW,MAAQ6M,EAASf,QAAO,SAACC,EAAKe,GAAN,4BAAkBf,GAAlB,YAA0Be,MAAM,I,UAErCX,QAAQC,IAChC/M,EAAOW,MAAMI,IAAb,uCAAiB,WAAOC,GAAP,SAAAuB,EAAA,gGACLmC,IAAK0B,IAAL,4DAA8DpF,EAAKjB,KAD9D,0BAEZY,MAAM,GAFM,uCAGfZ,GAAIiB,EAAKjB,IAHM,wFAAjB,wD,QADIe,E,OAONd,EAAOc,YAAcA,E,kDAErBgF,QAAQE,KAAK,6BAAb,MACA2B,YAAM,qBAAD,c,4GAIQ+F,G,6EAERvD,KAAK5E,QAAkB,OAAPmI,QAAO,IAAPA,OAAA,EAAAA,EAAS9M,QAAS,E,0CAC9B,G,OAGT,O,SAAM8D,IAAK2B,KAAL,iCAAoCqH,EAAQ3M,KAAI,SAAChB,GAAD,kBAAaA,MAAM4N,KAAK,MAAQ,CACpFpL,EAAG,iC,OAGL,O,SAAM4H,KAAKF,YAAYyD,EAAS,S,OAChC,O,SAAMvD,KAAKF,YAAYyD,EAAS,e,iCAEzB,G,yCAEP5H,QAAQE,KAAK,mCAAb,MACA2B,YAAM,4BAAD,c,mBACE,G,wGAIE+F,EAASE,G,2FACCzD,KAAKlK,SAAW,I,4DAA1BD,E,oBACLA,EAAO4N,U,aAAP,EAAepC,MAAK,SAACxK,GAAD,OAAU0M,EAAQG,SAAS7M,EAAKjB,Q,gBAEtD,OADAC,EAAO4N,GAAS5N,EAAO4N,GAAOpD,QAAO,SAACxJ,GAAD,OAAW0M,EAAQG,SAAS7M,EAAKjB,O,SAChEyH,aAAayD,QAAb,UAAwB2C,EAAxB,YAAiC5N,EAAOD,IAAM+N,KAAKpI,UAAU1F,EAAO4N,K,6MAMrEG,EAAmB5N,IAAM6N,cAAc,MAE7C,SAASxO,IACd,OAAOW,IAAM8N,WAAWF,M","file":"static/js/main.274189a0.chunk.js","sourcesContent":["import dayjs from 'dayjs';\nimport { observer } from 'mobx-react';\nimport qs from 'qs';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useRootStore } from 'src/RootStore';\nimport ItemActions from 'src/widgets/ItemActions';\n\nexport default observer(function FolderPage(props) {\n  const rootStore = useRootStore();\n\n  const query = qs.parse(props.location.search.slice(1));\n  const { id: folderId } = query;\n  const folder = rootStore.folders?.find((folder) => folder.id === folderId);\n\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n\n  return (\n    <div className=\"flex-column\" style={{ paddingBottom: 4 }}>\n      <div style={{ margin: '4px 4px 0' }}>\n        {folder?.id}：{folder?.items?.length}/{folder?.unreadCount}\n      </div>\n\n      {folder?.randomItems?.map((item) => (\n        <div\n          key={item.id}\n          style={{\n            margin: 4,\n            marginBottom: 0,\n            border: '1px solid black',\n            borderRadius: 4,\n            padding: 8,\n          }}\n        >\n          <Link to={`/Item?folderId=${folderId}&id=${item.id}`}>\n            <div>{item.title}</div>\n            <div\n              className=\"flex-row align-center\"\n              style={{ marginTop: 8, justifyContent: 'space-between', fontSize: 12, color: 'gray' }}\n            >\n              <div>\n                {item.origin?.title} | {item.author}\n              </div>\n              <div>{dayjs(item.updated * 1000).format('YYYY-MM-DD HH:mm')}</div>\n            </div>\n          </Link>\n          <div\n            className=\"flex-row align-center\"\n            style={{ marginTop: 8, justifyContent: 'flex-end' }}\n          >\n            <ItemActions\n              folderId={folderId}\n              item={item}\n              isSubmitting={isSubmitting}\n              setIsSubmitting={setIsSubmitting}\n            />\n          </div>\n        </div>\n      ))}\n\n      <div style={{ height: 50 }} />\n      <div\n        className=\"flex-row\"\n        style={{ position: 'fixed', bottom: 0, left: 0, right: 0, zIndex: 7, height: 50 }}\n      >\n        <button\n          onClick={async () => {\n            setIsSubmitting(true);\n            await rootStore.markItemsAsRead(folder.randomItems.map((item) => item.id));\n            await rootStore.loadItems({ folderId });\n            setIsSubmitting(false);\n          }}\n          disabled={isSubmitting}\n          style={{ flex: 1 }}\n        >\n          mark them as read\n        </button>\n        <button\n          onClick={() => {\n            setIsSubmitting(true);\n            rootStore.loadItems({ folderId });\n            setIsSubmitting(false);\n          }}\n          disabled={isSubmitting}\n          style={{ flex: 1 }}\n        >\n          reload random items\n        </button>\n      </div>\n    </div>\n  );\n});\n","import dayjs from 'dayjs';\nimport HtmlToReact, { Parser as HtmlToReactParser } from 'html-to-react';\nimport { observer } from 'mobx-react';\nimport qs from 'qs';\nimport React from 'react';\nimport { useRootStore } from 'src/RootStore';\nimport ItemActions from 'src/widgets/ItemActions';\n\nexport default observer(function ItemPage(props) {\n  const rootStore = useRootStore();\n\n  const query = qs.parse(props.location.search.slice(1));\n  const { folderId, id: itemId } = query;\n\n  const folder = rootStore.folders?.find((f) => f.id === folderId);\n  const item = folder?.randomItems?.find((item) => item.id === itemId);\n\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n\n  let contentElement = null;\n  if (item?.summary?.content) {\n    const preprocessingInstructions = [\n      {\n        shouldPreprocessNode: (node) => node.name === 'img',\n        preprocessNode: (node) => {\n          node.attribs = {\n            ...node.attribs,\n            style: `${node.attribs?.style || ''}; max-width: 100%; height: auto;`,\n          };\n        },\n      },\n      {\n        shouldPreprocessNode: (node) => node.name === 'pre',\n        preprocessNode: (node) => {\n          node.attribs = {\n            ...node.attribs,\n            style: `${node.attribs?.style || ''};\n              border: 1px solid lightgray;\n              padding: 2px;\n              overflow-x: auto;\n              white-space: pre;\n              font-size: 0.8rem;\n            `,\n          };\n        },\n      },\n    ];\n    const processNodeDefinitions = new HtmlToReact.ProcessNodeDefinitions(React);\n    const processingInstructions = [\n      {\n        shouldProcessNode: (node) => true,\n        processNode: processNodeDefinitions.processDefaultNode,\n      },\n    ];\n    const parser = new HtmlToReactParser();\n    contentElement = parser.parseWithInstructions(\n      item.summary.content,\n      () => true,\n      processingInstructions,\n      preprocessingInstructions,\n    );\n  }\n\n  return (\n    <div className=\"flex-column\">\n      <a\n        href={item?.canonical?.[0]?.href}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"flex-column\"\n        style={{\n          background: 'lightgray',\n          padding: 8,\n        }}\n      >\n        <div style={{ fontWeight: 'bold' }}>{item?.title}</div>\n        <div\n          className=\"flex-row align-center\"\n          style={{ marginTop: 8, justifyContent: 'space-between', fontSize: 12, color: 'gray' }}\n        >\n          <div>\n            {item?.origin?.title} | {item?.author}\n          </div>\n          <div>{dayjs(item?.updated * 1000).format('YYYY-MM-DD HH:mm')}</div>\n        </div>\n      </a>\n\n      <div style={{ margin: 8 }}>\n        {contentElement || <div dangerouslySetInnerHTML={{ __html: item?.summary?.content }} />}\n      </div>\n\n      <div style={{ height: 100 }} />\n      <div\n        className=\"flex-row\"\n        style={{ position: 'fixed', bottom: 0, left: 0, right: 0, zIndex: 7, height: 50 }}\n      >\n        <ItemActions\n          folderId={folderId}\n          item={item}\n          history={props.history}\n          isSubmitting={isSubmitting}\n          setIsSubmitting={setIsSubmitting}\n          buttonStyle={{ flex: 1 }}\n        />\n      </div>\n    </div>\n  );\n});\n","import axios from 'axios';\nimport qs from 'qs';\n\nconst api2 = {};\n\nlet api = axios.create({\n  baseURL: 'https://fever.glacjay.info',\n  timeout: 30000,\n});\n\napi2.request = async (method, url, args, options) => {\n  try {\n    const actualArgs = {\n      ...args,\n    };\n    const headers = {\n      ...(api2.token ? { Authorization: `GoogleLogin auth=${api2.token}` } : {}),\n    };\n    const result = (\n      await api.request({\n        method,\n        url,\n        ...(method === 'post' ? { data: qs.stringify(actualArgs) } : { params: actualArgs }),\n        headers,\n      })\n    ).data;\n    if (options?.log !== false) {\n      console.log(method.toUpperCase(), url, args, result);\n    }\n    return result;\n  } catch (error) {\n    console.warn(method.toUpperCase(), url, args, error);\n    if (error?.response?.status === 401) {\n      api2.token = null;\n      if (api2.history?.push) {\n        api2.history.push('/Login');\n      }\n      return;\n    }\n    throw error;\n  }\n};\n\napi2.get = async (url, args, options) => {\n  return api2.request('get', url, args, options);\n};\napi2.post = async (url, args, options) => {\n  return api2.request('post', url, args, options);\n};\n\nexport default api2;\n","import { observer } from 'mobx-react';\nimport React from 'react';\nimport { useRootStore } from 'src/RootStore';\n\nexport default observer(function LoginPage(props) {\n  const rootStore = useRootStore();\n\n  const [state, setState] = React.useState({\n    account: null,\n    password: null,\n    isSubmitting: false,\n  });\n\n  return (\n    <div\n      style={{\n        margin: 16,\n        display: 'grid',\n        gridTemplateColumns: 'auto 1fr',\n        rowGap: 16,\n        columnGap: 16,\n      }}\n    >\n      <div>account</div>\n      <input\n        value={state.account ?? ''}\n        onChange={(e) => setState({ ...state, account: e.target.value || null })}\n      />\n\n      <div>password</div>\n      <input\n        type=\"password\"\n        value={state.password ?? ''}\n        onChange={(e) => setState({ ...state, password: e.target.value || null })}\n      />\n\n      <button\n        onClick={async () => {\n          setState({ ...state, isSubmitting: true });\n          if (await rootStore.login(state.account, state.password)) {\n            props.history.goBack();\n          }\n          setState({ ...state, isSubmitting: false });\n        }}\n        disabled={state.isSubmitting}\n        style={{ gridColumn: '1 / span 2', padding: 8, fontSize: 14 }}\n      >\n        login\n      </button>\n    </div>\n  );\n});\n","import { observer } from 'mobx-react';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useRootStore } from 'src/RootStore';\n\nexport default observer(function IndexPage(props) {\n  const rootStore = useRootStore();\n\n  React.useEffect(() => {\n    rootStore.loadFolders();\n  }, [rootStore, rootStore.token]);\n\n  if (!rootStore.token) {\n    return (\n      <Link to=\"/Login\" style={{ margin: 8, border: '1px solid black', padding: 16 }}>\n        login\n      </Link>\n    );\n  }\n\n  return (\n    <div className=\"flex-column\">\n      <div style={{ margin: '4px 4px 0' }}>未读：{rootStore.totalUnreadCounts}</div>\n\n      {rootStore.folders?.map((folder) => (\n        <Link\n          key={folder.id}\n          to={`/Folder?id=${folder.id}`}\n          style={{ margin: '4px 4px 0', border: '1px solid black', borderRadius: 4, padding: 8 }}\n        >\n          {folder.id} ({folder.unreadCount})\n        </Link>\n      ))}\n    </div>\n  );\n});\n","import { observer } from 'mobx-react';\nimport React from 'react';\nimport { HashRouter, Route, Switch, useHistory } from 'react-router-dom';\nimport { cssTransition, ToastContainer } from 'react-toastify';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport { useRootStore } from 'src/RootStore';\nimport api2 from 'src/utils/api2';\n\nexport default observer(function App() {\n  const rootStore = useRootStore();\n\n  React.useEffect(() => {\n    const loadToken = async () => {\n      try {\n        const token = await localStorage.getItem('token');\n        rootStore.loadToken(token);\n      } catch (ex) {\n        console.warn('App.loadToken error:', ex);\n        toast(`load storage error: ${ex}`);\n      }\n    };\n    loadToken();\n  }, [rootStore]);\n\n  return (\n    <div>\n      <ToastContainer\n        autoClose={4000}\n        closeButton={false}\n        transition={cssTransition({\n          enter: 'slideInDown',\n          exit: 'slideOutUp',\n          duration: 300,\n        })}\n        hideProgressBar\n        toastClassName=\"toast-border\"\n        bodyClassName=\"toast-body\"\n      />\n\n      <HashRouter>\n        <HistoryGetter />\n        <Switch>\n          <Route path=\"/Folder\" component={require('src/pages/FolderPage').default} />\n          <Route path=\"/Item\" component={require('src/pages/ItemPage').default} />\n\n          <Route path=\"/Login\" component={require('src/pages/LoginPage').default} />\n          <Route path=\"/\" component={require('src/pages/IndexPage').default} />\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n});\n\nfunction HistoryGetter() {\n  const history = useHistory();\n\n  React.useEffect(() => {\n    api2.history = history;\n  }, [history]);\n\n  return null;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport RootStore, { RootStoreContext } from 'src/RootStore';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RootStoreContext.Provider value={new RootStore()}>\n      <App />\n    </RootStoreContext.Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Fragment } from 'react';\nimport { useRootStore } from 'src/RootStore';\n\nexport default function ItemActions(props) {\n  const rootStore = useRootStore();\n  const { item, isSubmitting, setIsSubmitting } = props;\n\n  return (\n    <Fragment>\n      <button\n        onClick={async () => {\n          setIsSubmitting(true);\n          if (await rootStore.markItemsAsRead([item?.id])) {\n            if (props.history?.goBack) {\n              props.history.goBack();\n            }\n          }\n          setIsSubmitting(false);\n        }}\n        disabled={isSubmitting}\n        style={{ padding: '4px 8px', ...props.buttonStyle }}\n      >\n        mark as read\n      </button>\n      <a\n        href={item?.canonical?.[0]?.href}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"flex-row justify-center align-center\"\n        style={{\n          border: '1px solid lightgray',\n          borderRadius: 4,\n          background: 'white',\n          padding: '4px 8px',\n          ...props.buttonStyle,\n        }}\n      >\n        original link\n      </a>\n      <button\n        onClick={() => {\n          rootStore.removeItems([item?.id], 'randomItems');\n          if (props.history?.goBack) {\n            props.history.goBack();\n          }\n        }}\n        disabled={isSubmitting}\n        style={{ padding: '4px 8px', ...props.buttonStyle }}\n      >\n        later\n      </button>\n    </Fragment>\n  );\n}\n","import * as mobx from 'mobx';\nimport React from 'react';\nimport { toast } from 'react-toastify';\nimport api2 from 'src/utils/api2';\n\nexport default class RootStore {\n  token = null;\n  folders = null;\n\n  constructor() {\n    mobx.makeAutoObservable(this);\n  }\n\n  loadToken(token) {\n    this.token = token;\n    api2.token = token;\n  }\n\n  *login(account, password) {\n    try {\n      const result = yield api2.post('/accounts/ClientLogin', { Email: account, Passwd: password });\n      const json = {};\n      result\n        .split('\\n')\n        .filter((l) => l)\n        .forEach((line) => {\n          const idx = line.indexOf('=');\n          if (idx > 0) {\n            json[line.substr(0, idx)] = line.substr(idx + 1);\n          } else {\n            json[line] = true;\n          }\n        });\n      if (!json.Auth) {\n        throw new Error('account or password incorrect');\n      }\n\n      this.token = json.Auth;\n      yield localStorage.setItem('token', this.token);\n      api2.token = this.token;\n      return true;\n    } catch (ex) {\n      console.warn('RootStore.login error:', ex);\n      toast(`login failed: ${ex}`);\n      return false;\n    }\n  }\n\n  *loadFolders() {\n    try {\n      if (!this.token) {\n        return;\n      }\n\n      this.folders = (yield api2.get('/reader/api/0/tag/list?output=json')).tags.filter((tag) =>\n        /\\/label\\//.test(tag.id),\n      );\n\n      const subscriptions = (yield api2.get('/reader/api/0/subscription/list?output=json'))\n        .subscriptions;\n      for (const folder of this.folders) {\n        folder.subscriptions = subscriptions.filter((sub) =>\n          sub.categories?.some((cat) => cat.id === folder?.id),\n        );\n      }\n\n      yield this.loadUnreadCounts(this.folders);\n    } catch (ex) {\n      console.warn('RootStore.loadFolders error:', ex);\n      toast(`load folders error: ${ex}`);\n    }\n  }\n\n  *loadUnreadCounts(folders) {\n    const result = yield api2.get('/reader/api/0/unread-count?output=json');\n    this.totalUnreadCounts = result.bq_total_unreads;\n    const unreadCounts = result.unreadcounts;\n    for (const folder of folders) {\n      const folderId = folder.id?.replace(/\\d+/, '-');\n      const count = unreadCounts.find((c) => c.id === folderId);\n      if (count) {\n        folder.unreadCount = count.count;\n      }\n\n      for (const sub of folder.subscriptions || []) {\n        const subCount = unreadCounts.find((c) => c.id === sub.id);\n        if (subCount) {\n          sub.unreadCount = subCount.count;\n        }\n      }\n    }\n  }\n\n  *loadItems({ folderId, reloadItems }) {\n    try {\n      if (!this.token || !folderId) {\n        return;\n      }\n      if (!this.folders) {\n        yield this.loadFolders();\n      }\n      const folder = this.folders?.find((f) => f.id === folderId);\n      if (!folder) {\n        return;\n      }\n\n      if (reloadItems) {\n        yield this.loadUnreadCounts([folder]);\n      }\n\n      if (reloadItems) {\n        folder.items = null;\n      }\n\n      const subscriptions = [...folder.subscriptions.filter((sub) => sub.unreadCount > 0)];\n      for (let i = subscriptions.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [subscriptions[i], subscriptions[j]] = [subscriptions[j], subscriptions[i]];\n      }\n\n      let totalUnreadCount = subscriptions.reduce((acc, sub) => acc + sub.unreadCount, 0);\n      const feeds = {};\n      for (\n        let i = 0;\n        Object.values(feeds).reduce((acc, c) => acc + c, 0) < 7 && totalUnreadCount > 0;\n        i = (i + 1) % subscriptions.length\n      ) {\n        if (!feeds[subscriptions[i].id]) {\n          feeds[subscriptions[i].id] = 0;\n        }\n        if (feeds[subscriptions[i].id] < subscriptions[i].unreadCount) {\n          feeds[subscriptions[i].id] += 1;\n        }\n        totalUnreadCount -= 1;\n      }\n\n      const newItems = yield Promise.all(\n        Object.keys(feeds).map(\n          async (subId) =>\n            (\n              await api2.get('/reader/api/0/stream/items/ids', {\n                output: 'json',\n                s: subId,\n                xt: 'user/-/state/com.google/read',\n                r: 'o',\n                n: feeds[subId],\n              })\n            ).itemRefs,\n        ),\n      );\n      folder.items = newItems.reduce((acc, arr) => [...acc, ...arr], []);\n\n      const randomItems = yield Promise.all(\n        folder.items.map(async (item) => ({\n          ...(await api2.get(`/reader/api/0/stream/items/contents?output=json&i=${item.id}`))\n            .items[0],\n          id: item.id,\n        })),\n      );\n      folder.randomItems = randomItems;\n    } catch (ex) {\n      console.warn('RootStore.loadItems error:', ex);\n      toast(`load items error: ${ex}`);\n    }\n  }\n\n  *markItemsAsRead(itemIds) {\n    try {\n      if (!this.token || !(itemIds?.length > 0)) {\n        return false;\n      }\n\n      yield api2.post(`/reader/api/0/edit-tag?${itemIds.map((id) => `i=${id}`).join('&')}`, {\n        a: 'user/-/state/com.google/read',\n      });\n\n      yield this.removeItems(itemIds, 'items');\n      yield this.removeItems(itemIds, 'randomItems');\n\n      return true;\n    } catch (ex) {\n      console.warn('RootStore.markItemsAsRead error:', ex);\n      toast(`mark item as read error: ${ex}`);\n      return false;\n    }\n  }\n\n  *removeItems(itemIds, field) {\n    for (const folder of this.folders || []) {\n      if (folder[field]?.some((item) => itemIds.includes(item.id))) {\n        folder[field] = folder[field].filter((item) => !itemIds.includes(item.id));\n        yield localStorage.setItem(`${field}:${folder.id}`, JSON.stringify(folder[field]));\n      }\n    }\n  }\n}\n\nexport const RootStoreContext = React.createContext(null);\n\nexport function useRootStore() {\n  return React.useContext(RootStoreContext);\n}\n"],"sourceRoot":""}