{"version":3,"sources":["pages/RecentlyReadItemsPage.js","pages/FolderPage.js","pages/ItemPage.js","utils/api2.js","pages/LoginPage.js","pages/IndexPage.js","App.js","serviceWorker.js","index.js","widgets/ItemActions.js","RootStore.js"],"names":["observer","props","rootStore","useRootStore","React","useEffect","init","className","style","paddingBottom","margin","recentlyReadItems","length","map","item","marginBottom","border","borderRadius","padding","to","id","title","marginTop","justifyContent","fontSize","color","origin","author","dayjs","updated","format","folderId","qs","parse","location","search","slice","a","loadItems","useState","isSubmitting","setIsSubmitting","folder","folders","find","f","replace","randomItems","unreadCount","stringify","height","position","bottom","left","right","zIndex","Math","random","onClick","markItemsAsRead","disabled","opacity","flex","reloadItems","query","itemId","loadedItems","contentElement","summary","content","preprocessingInstructions","shouldPreprocessNode","node","name","preprocessNode","attribs","processingInstructions","shouldProcessNode","processNode","HtmlToReact","ProcessNodeDefinitions","processDefaultNode","HtmlToReactParser","parseWithInstructions","href","canonical","target","rel","background","fontWeight","dangerouslySetInnerHTML","__html","history","buttonStyle","api2","api","axios","create","baseURL","timeout","request","method","url","args","options","actualArgs","headers","token","Authorization","data","params","result","log","console","toUpperCase","warn","response","status","push","get","post","account","password","state","setState","display","gridTemplateColumns","rowGap","columnGap","value","onChange","e","type","login","goBack","gridColumn","loadFolders","minHeight","totalUnreadCounts","autoClose","closeButton","transition","cssTransition","enter","exit","duration","hideProgressBar","toastClassName","bodyClassName","HistoryGetter","maxWidth","path","component","require","default","useHistory","Boolean","window","hostname","match","ReactDOM","render","StrictMode","RootStore","Provider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","ItemActions","textDecoration","removeItems","mobx","this","localStorage","getItem","JSON","forEach","loadItemsFromLocal","toast","Email","Passwd","json","split","filter","l","line","idx","indexOf","substr","Auth","Error","setItem","tags","tag","test","subscriptions","sub","categories","some","cat","loadUnreadCounts","bq_total_unreads","unreadCounts","unreadcounts","count","c","subCount","i","j","floor","Promise","all","subscription","output","s","xt","r","n","itemRefs","newItemsArray","loadingItems","addedCount","newItems","shift","newItem","items","newRandomItems","pos","self","findIndex","i2","itemIds","join","field","includes","RootStoreContext","createContext","useContext"],"mappings":"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","file":"static/js/main.fba6ff8e.chunk.js","sourcesContent":["import dayjs from 'dayjs';\nimport { observer } from 'mobx-react';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useRootStore } from 'src/RootStore';\n\nexport default observer(function FolderPage(props) {\n  const rootStore = useRootStore();\n  React.useEffect(() => {\n    rootStore.init();\n  }, [rootStore]);\n\n  // const [isSubmitting, setIsSubmitting] = React.useState(false);\n\n  return (\n    <div className=\"flex-column\" style={{ paddingBottom: 4 }}>\n      <div style={{ margin: '4px 4px 0' }}>最近已读文章：{rootStore.recentlyReadItems?.length}</div>\n\n      {rootStore.recentlyReadItems?.map((item) => (\n        <div\n          key={item.id}\n          style={{\n            margin: 4,\n            marginBottom: 0,\n            border: '1px solid black',\n            borderRadius: 4,\n            padding: 8,\n          }}\n        >\n          <Link to={`/Item?id=${item.id}`}>\n            <div>{item.title}</div>\n            <div\n              className=\"flex-row align-center\"\n              style={{ marginTop: 8, justifyContent: 'space-between', fontSize: 12, color: 'gray' }}\n            >\n              <div>\n                {item.origin?.title} | {item.author}\n              </div>\n              <div>{dayjs(item.updated * 1000).format('YYYY-MM-DD HH:mm')}</div>\n            </div>\n          </Link>\n          <div\n            className=\"flex-row align-center\"\n            style={{ marginTop: 8, justifyContent: 'flex-end' }}\n          ></div>\n        </div>\n      ))}\n    </div>\n  );\n});\n","import dayjs from 'dayjs';\nimport { observer } from 'mobx-react';\nimport qs from 'qs';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useRootStore } from 'src/RootStore';\nimport ItemActions from 'src/widgets/ItemActions';\n\nexport default observer(function FolderPage(props) {\n  const rootStore = useRootStore();\n\n  const query = qs.parse(props.location.search.slice(1));\n  const { id: folderId } = query;\n  React.useEffect(() => {\n    const init = async () => {\n      await rootStore.init();\n      await rootStore.loadItems({ folderId });\n    };\n    init();\n  }, [rootStore, folderId]);\n\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n\n  const folder = rootStore.folders?.find((f) => f.id === folderId);\n  if (!folder) return null;\n\n  return (\n    <div className=\"flex-column\" style={{ paddingBottom: 4 }}>\n      <div style={{ margin: '4px 4px 0' }}>\n        {folder?.id?.replace(/.*\\//g, '')}：{folder?.randomItems?.length}/{folder?.unreadCount}\n      </div>\n\n      {folder?.randomItems?.map((item) => (\n        <div\n          key={item.id}\n          style={{\n            margin: 4,\n            marginBottom: 0,\n            border: '1px solid black',\n            borderRadius: 4,\n            padding: 8,\n          }}\n        >\n          <Link to={`/Item?${qs.stringify({ folderId, id: item.id })}`}>\n            <div>{item.title}</div>\n            <div\n              className=\"flex-row align-center\"\n              style={{ marginTop: 8, justifyContent: 'space-between', fontSize: 12, color: 'gray' }}\n            >\n              <div>\n                {item.origin?.title} | {item.author}\n              </div>\n              <div>{dayjs(item.updated * 1000).format('YYYY-MM-DD HH:mm')}</div>\n            </div>\n          </Link>\n          <div\n            className=\"flex-row align-center\"\n            style={{ marginTop: 8, justifyContent: 'flex-end' }}\n          >\n            <ItemActions\n              folderId={folderId}\n              item={item}\n              isSubmitting={isSubmitting}\n              setIsSubmitting={setIsSubmitting}\n            />\n          </div>\n        </div>\n      ))}\n\n      <div style={{ height: 100 }} />\n      <div\n        className=\"flex-row\"\n        style={{ position: 'fixed', bottom: 0, left: 0, right: 0, zIndex: 7, height: 50 }}\n      >\n        {Math.random() > 2 && (\n          <button\n            onClick={async () => {\n              setIsSubmitting(true);\n              await rootStore.markItemsAsRead(folder.randomItems.map((item) => item.id));\n              await rootStore.loadItems({ folderId });\n              setIsSubmitting(false);\n            }}\n            disabled={isSubmitting}\n            className=\"button\"\n            style={{ height: 44, opacity: isSubmitting ? 0.5 : 1, flex: 1 }}\n          >\n            mark them as read\n          </button>\n        )}\n\n        <button\n          onClick={() => {\n            setIsSubmitting(true);\n            rootStore.loadItems({ folderId, reloadItems: true });\n            setIsSubmitting(false);\n          }}\n          disabled={isSubmitting}\n          className=\"button\"\n          style={{ height: 44, opacity: isSubmitting ? 0.5 : 1, flex: 1 }}\n        >\n          reload random items\n        </button>\n      </div>\n    </div>\n  );\n});\n","import dayjs from 'dayjs';\nimport HtmlToReact, { Parser as HtmlToReactParser } from 'html-to-react';\nimport { observer } from 'mobx-react';\nimport qs from 'qs';\nimport React from 'react';\nimport { useRootStore } from 'src/RootStore';\nimport ItemActions from 'src/widgets/ItemActions';\n\nexport default observer(function ItemPage(props) {\n  const rootStore = useRootStore();\n  React.useEffect(() => {\n    rootStore.init();\n  }, [rootStore]);\n\n  const query = qs.parse(props.location.search.slice(1));\n  const { id: itemId } = query;\n  const item = rootStore.loadedItems[itemId];\n\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n\n  let contentElement = null;\n  if (item?.summary?.content) {\n    const preprocessingInstructions = [\n      {\n        shouldPreprocessNode: (node) => node.name === 'img',\n        preprocessNode: (node) => {\n          node.attribs = {\n            ...node.attribs,\n            style: `${node.attribs?.style || ''}; max-width: 100%; height: auto;`,\n          };\n        },\n      },\n      {\n        shouldPreprocessNode: (node) => node.name === 'pre',\n        preprocessNode: (node) => {\n          node.attribs = {\n            ...node.attribs,\n            style: `${node.attribs?.style || ''};\n              border: 1px solid lightgray;\n              padding: 2px;\n              overflow-x: auto;\n              white-space: pre;\n              font-size: 0.8rem;\n            `,\n          };\n        },\n      },\n    ];\n    const processNodeDefinitions = new HtmlToReact.ProcessNodeDefinitions(React);\n    const processingInstructions = [\n      {\n        shouldProcessNode: (node) => true,\n        processNode: processNodeDefinitions.processDefaultNode,\n      },\n    ];\n    const parser = new HtmlToReactParser();\n    contentElement = parser.parseWithInstructions(\n      item.summary.content,\n      () => true,\n      processingInstructions,\n      preprocessingInstructions,\n    );\n  }\n\n  return (\n    <div className=\"flex-column\">\n      <a\n        href={item?.canonical?.[0]?.href}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"flex-column\"\n        style={{\n          background: 'lightgray',\n          padding: 8,\n        }}\n      >\n        <div style={{ fontWeight: 'bold' }}>{item?.title}</div>\n        <div\n          className=\"flex-row align-center\"\n          style={{ marginTop: 8, justifyContent: 'space-between', fontSize: 12, color: 'gray' }}\n        >\n          <div>\n            {item?.origin?.title} | {item?.author}\n          </div>\n          <div>{dayjs(item?.updated * 1000).format('YYYY-MM-DD HH:mm')}</div>\n        </div>\n      </a>\n\n      <div style={{ margin: 8 }}>\n        {contentElement || <div dangerouslySetInnerHTML={{ __html: item?.summary?.content }} />}\n      </div>\n\n      <div style={{ height: 100 }} />\n      <div\n        className=\"flex-row\"\n        style={{ position: 'fixed', bottom: 0, left: 0, right: 0, zIndex: 7, height: 50 }}\n      >\n        <ItemActions\n          folderId={query.folderId}\n          item={item}\n          history={props.history}\n          isSubmitting={isSubmitting}\n          setIsSubmitting={setIsSubmitting}\n          buttonStyle={{ flex: 1, height: 44 }}\n        />\n      </div>\n    </div>\n  );\n});\n","import axios from 'axios';\nimport qs from 'qs';\n\nconst api2 = {};\n\nlet api = axios.create({\n  baseURL: 'https://damp-boat-612e.glacjay.workers.dev',\n  timeout: 30000,\n});\n\napi2.request = async (method, url, args, options) => {\n  try {\n    const actualArgs = {\n      ...args,\n    };\n    const headers = {\n      ...(api2.token ? { Authorization: `GoogleLogin auth=${api2.token}` } : {}),\n    };\n    const result = (\n      await api.request({\n        method,\n        url,\n        ...(method === 'post' ? { data: qs.stringify(actualArgs) } : { params: actualArgs }),\n        headers,\n      })\n    ).data;\n    if (options?.log !== false) {\n      console.log(method.toUpperCase(), url, args, result);\n    }\n    return result;\n  } catch (error) {\n    console.warn(method.toUpperCase(), url, args, error);\n    if (error?.response?.status === 401) {\n      api2.token = null;\n      api2.history?.push?.('/Login');\n    }\n    throw error;\n  }\n};\n\napi2.get = async (url, args, options) => {\n  return api2.request('get', url, args, options);\n};\napi2.post = async (url, args, options) => {\n  return api2.request('post', url, args, options);\n};\n\nexport default api2;\n","import { observer } from 'mobx-react';\nimport React from 'react';\nimport { useRootStore } from 'src/RootStore';\n\nexport default observer(function LoginPage(props) {\n  const rootStore = useRootStore();\n\n  const [state, setState] = React.useState({\n    account: null,\n    password: null,\n    isSubmitting: false,\n  });\n\n  return (\n    <div\n      style={{\n        margin: 16,\n        display: 'grid',\n        gridTemplateColumns: 'auto 1fr',\n        rowGap: 16,\n        columnGap: 16,\n      }}\n    >\n      <div>account</div>\n      <input\n        value={state.account ?? ''}\n        onChange={(e) => setState({ ...state, account: e.target.value || null })}\n      />\n\n      <div>password</div>\n      <input\n        type=\"password\"\n        value={state.password ?? ''}\n        onChange={(e) => setState({ ...state, password: e.target.value || null })}\n      />\n\n      <button\n        onClick={async () => {\n          setState({ ...state, isSubmitting: true });\n          if (await rootStore.login(state.account, state.password)) {\n            props.history.goBack();\n          }\n          setState({ ...state, isSubmitting: false });\n        }}\n        disabled={state.isSubmitting}\n        style={{ gridColumn: '1 / span 2', padding: 8, fontSize: 14 }}\n      >\n        login\n      </button>\n    </div>\n  );\n});\n","import { observer } from 'mobx-react';\nimport React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useRootStore } from 'src/RootStore';\n\nexport default observer(function IndexPage(props) {\n  const rootStore = useRootStore();\n  React.useEffect(() => {\n    const init = async () => {\n      await rootStore.init();\n      await rootStore.loadFolders();\n    };\n    init();\n  }, [rootStore, rootStore.token]);\n\n  if (!rootStore.token) {\n    return (\n      <Link to=\"/Login\" style={{ margin: 8, border: '1px solid black', padding: 16 }}>\n        login\n      </Link>\n    );\n  }\n\n  return (\n    <div className=\"flex-column\" style={{ minHeight: '100vh' }}>\n      <div style={{ margin: '4px 4px 0' }}>未读：{rootStore.totalUnreadCounts}</div>\n\n      {rootStore.folders?.map((folder) => (\n        <Link\n          key={folder.id}\n          to={`/Folder?id=${folder.id}`}\n          style={{ margin: '4px 4px 0', border: '1px solid black', borderRadius: 4, padding: 8 }}\n        >\n          {folder.id?.replace(/.*\\//g, '')} ({folder.unreadCount})\n        </Link>\n      ))}\n\n      {rootStore.recentlyReadItems?.length > 0 && (\n        <Fragment>\n          <div style={{ flex: 1, minHeight: 16 }} />\n          <Link\n            to={`/RecentlyReadItems`}\n            style={{ margin: '4px 4px', border: '1px solid black', borderRadius: 4, padding: 8 }}\n          >\n            最近已读文章\n          </Link>\n        </Fragment>\n      )}\n    </div>\n  );\n});\n","import 'react-toastify/dist/ReactToastify.min.css';\n\nimport { observer } from 'mobx-react';\nimport React from 'react';\nimport { HashRouter, Route, Switch, useHistory } from 'react-router-dom';\nimport { cssTransition, ToastContainer } from 'react-toastify';\nimport api2 from 'src/utils/api2';\n\nexport default observer(function App() {\n  return (\n    <div>\n      <ToastContainer\n        autoClose={4000}\n        closeButton={false}\n        transition={cssTransition({\n          enter: 'slideInDown',\n          exit: 'slideOutUp',\n          duration: 300,\n        })}\n        hideProgressBar\n        toastClassName=\"toast-border\"\n        bodyClassName=\"toast-body\"\n      />\n\n      <HashRouter>\n        <HistoryGetter />\n\n        <div style={{ margin: '0 auto', maxWidth: 666 }}>\n          <Switch>\n            <Route\n              path=\"/RecentlyReadItems\"\n              component={require('src/pages/RecentlyReadItemsPage').default}\n            />\n            <Route path=\"/Folder\" component={require('src/pages/FolderPage').default} />\n            <Route path=\"/Item\" component={require('src/pages/ItemPage').default} />\n\n            <Route path=\"/Login\" component={require('src/pages/LoginPage').default} />\n            <Route path=\"/\" component={require('src/pages/IndexPage').default} />\n          </Switch>\n        </div>\n      </HashRouter>\n    </div>\n  );\n});\n\nfunction HistoryGetter() {\n  const history = useHistory();\n\n  React.useEffect(() => {\n    api2.history = history;\n  }, [history]);\n\n  return null;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport RootStore, { RootStoreContext } from 'src/RootStore';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RootStoreContext.Provider value={new RootStore()}>\n      <App />\n    </RootStoreContext.Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Fragment } from 'react';\nimport { useRootStore } from 'src/RootStore';\n\nexport default function ItemActions(props) {\n  const rootStore = useRootStore();\n  const { item, isSubmitting, setIsSubmitting } = props;\n\n  return (\n    <Fragment>\n      <button\n        onClick={async () => {\n          setIsSubmitting(true);\n          if (await rootStore.markItemsAsRead([item?.id])) {\n            if (props.folderId) {\n              rootStore.loadItems({ folderId: props.folderId });\n            }\n            if (props.history?.goBack) {\n              props.history.goBack();\n            }\n          }\n          setIsSubmitting(false);\n        }}\n        disabled={isSubmitting}\n        className=\"button\"\n        style={{ opacity: isSubmitting ? 0.5 : 1, ...props.buttonStyle }}\n      >\n        mark as read\n      </button>\n\n      <a\n        href={item?.canonical?.[0]?.href}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"button flex-row justify-center align-center\"\n        style={{ opacity: isSubmitting ? 0.5 : 1, textDecoration: 'none', ...props.buttonStyle }}\n      >\n        original link\n      </a>\n\n      <button\n        onClick={() => {\n          rootStore.removeItems([item?.id], 'randomItems');\n          if (props.history?.goBack) {\n            props.history.goBack();\n          }\n        }}\n        disabled={isSubmitting}\n        className=\"button\"\n        style={{ opacity: isSubmitting ? 0.5 : 1, ...props.buttonStyle }}\n      >\n        later\n      </button>\n    </Fragment>\n  );\n}\n","import * as mobx from 'mobx';\nimport React from 'react';\nimport { toast } from 'react-toastify';\nimport api2 from 'src/utils/api2';\n\nconst LOADING_COUNT = 7;\n\nexport default class RootStore {\n  token = null;\n  folders = null;\n  recentlyReadItems = [];\n\n  constructor() {\n    mobx.makeAutoObservable(this);\n  }\n\n  *init() {\n    try {\n      const token = yield localStorage.getItem('token');\n      this.token = token;\n      api2.token = token;\n\n      this.folders = JSON.parse(yield localStorage.getItem('folders'));\n      this.folders.forEach((folder) => this.loadItemsFromLocal(folder));\n\n      this.recentlyReadItems = JSON.parse(yield localStorage.getItem('recentlyReadItems'));\n    } catch (ex) {\n      console.warn('RootStore.init error:', ex);\n      toast(`init error: ${ex}`);\n    }\n  }\n\n  *login(account, password) {\n    try {\n      const result = yield api2.post('/accounts/ClientLogin', { Email: account, Passwd: password });\n      const json = {};\n      result\n        .split('\\n')\n        .filter((l) => l)\n        .forEach((line) => {\n          const idx = line.indexOf('=');\n          if (idx > 0) {\n            json[line.substr(0, idx)] = line.substr(idx + 1);\n          } else {\n            json[line] = true;\n          }\n        });\n      if (!json.Auth) {\n        throw new Error('account or password incorrect');\n      }\n\n      this.token = json.Auth;\n      yield localStorage.setItem('token', this.token);\n      api2.token = this.token;\n      return true;\n    } catch (ex) {\n      console.warn('RootStore.login error:', ex);\n      toast(`login failed: ${ex}`);\n      return false;\n    }\n  }\n\n  get loadedItems() {\n    const items = {};\n    for (const item of this.recentlyReadItems || []) {\n      items[item.id] = item;\n    }\n    for (const folder of this.folders || []) {\n      for (const item of folder.randomItems || []) {\n        items[item.id] = item;\n      }\n    }\n    return items;\n  }\n\n  *loadFolders() {\n    try {\n      if (!this.token) {\n        return;\n      }\n\n      this.folders = (yield api2.get('/reader/api/0/tag/list?output=json')).tags.filter((tag) =>\n        /\\/label\\//.test(tag.id),\n      );\n\n      const subscriptions = (yield api2.get('/reader/api/0/subscription/list?output=json'))\n        .subscriptions;\n      for (const folder of this.folders) {\n        folder.subscriptions = subscriptions.filter((sub) =>\n          sub.categories?.some((cat) => cat.id === folder?.id),\n        );\n      }\n\n      yield this.loadUnreadCounts(this.folders);\n      this.folders.forEach((folder) => this.loadItemsFromLocal(folder));\n\n      yield localStorage.setItem(\n        'folders',\n        JSON.stringify(this.folders?.map((folder) => ({ ...folder, randomItems: null }))),\n      );\n    } catch (ex) {\n      console.warn('RootStore.loadFolders error:', ex);\n      toast(`load folders error: ${ex}`);\n    }\n  }\n\n  *loadUnreadCounts(folders) {\n    const result = yield api2.get('/reader/api/0/unread-count?output=json');\n    this.totalUnreadCounts = result.bq_total_unreads;\n    const unreadCounts = result.unreadcounts;\n    for (const folder of folders) {\n      const folderId = folder.id?.replace(/\\d+/, '-');\n      const count = unreadCounts.find((c) => c.id === folderId);\n      if (count) {\n        folder.unreadCount = count.count;\n      }\n\n      for (const sub of folder.subscriptions || []) {\n        const subCount = unreadCounts.find((c) => c.id === sub.id);\n        if (subCount) {\n          sub.unreadCount = subCount.count;\n        }\n      }\n    }\n  }\n\n  *loadItemsFromLocal(folder) {\n    let randomItems = yield localStorage.getItem(`randomItems:${folder.id}`);\n    if (randomItems) {\n      folder.randomItems = JSON.parse(randomItems);\n      return;\n    }\n  }\n\n  *loadItems({ folderId, reloadItems }) {\n    try {\n      if (!this.token || !folderId) {\n        return;\n      }\n      const folder = this.folders?.find((f) => f.id === folderId);\n      if (!folder) {\n        return;\n      }\n\n      if (reloadItems) {\n        yield this.loadUnreadCounts([folder]);\n        folder.randomItems = null;\n      }\n\n      let randomItems = folder.randomItems;\n      if (randomItems?.length > Math.random() * LOADING_COUNT) return;\n\n      if (!reloadItems) {\n        yield this.loadItemsFromLocal(folder);\n        if (folder.randomItems?.length >= LOADING_COUNT) {\n          return;\n        }\n      }\n\n      const subscriptions = [...folder.subscriptions.filter((sub) => sub.unreadCount > 0)];\n      for (let i = subscriptions.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [subscriptions[i], subscriptions[j]] = [subscriptions[j], subscriptions[i]];\n      }\n\n      let newItemsArray = yield Promise.all(\n        subscriptions.slice(0, LOADING_COUNT).map(\n          async (subscription) =>\n            (\n              await api2.get('/reader/api/0/stream/items/ids', {\n                output: 'json',\n                s: subscription.id,\n                xt: 'user/-/state/com.google/read',\n                r: 'o',\n                n: LOADING_COUNT,\n              })\n            ).itemRefs,\n        ),\n      );\n\n      const loadingItems = [];\n      let addedCount = 0;\n      while (newItemsArray.length > 0) {\n        const newItems = newItemsArray.shift();\n        if (newItems.length > 0) {\n          const newItem = newItems.shift();\n          if (!loadingItems.some((item) => item.id === newItem.id)) {\n            loadingItems.push(newItem);\n            addedCount += 1;\n            if (addedCount >= LOADING_COUNT) break;\n          }\n          newItemsArray.push(newItems);\n        }\n      }\n\n      const newRandomItems = yield Promise.all(\n        loadingItems.map(async (item) => ({\n          ...(await api2.get(`/reader/api/0/stream/items/contents?output=json&i=${item.id}`))\n            .items[0],\n          id: item.id,\n        })),\n      );\n\n      randomItems = [...(randomItems || []), ...newRandomItems];\n      randomItems = randomItems.filter(\n        (item, pos, self) => self.findIndex((i2) => i2.id === item.id) === pos,\n      );\n\n      folder.randomItems = randomItems;\n      yield localStorage.setItem(`randomItems:${folder.id}`, JSON.stringify(randomItems));\n    } catch (ex) {\n      console.warn('RootStore.loadItems error:', ex);\n      toast(`load items error: ${ex}`);\n    }\n  }\n\n  *markItemsAsRead(itemIds) {\n    try {\n      if (!this.token || !(itemIds?.length > 0)) {\n        return false;\n      }\n\n      yield api2.post(`/reader/api/0/edit-tag?${itemIds.map((id) => `i=${id}`).join('&')}`, {\n        a: 'user/-/state/com.google/read',\n      });\n\n      this.recentlyReadItems = [\n        ...itemIds.map((id) => this.loadedItems[id]),\n        ...(this.recentlyReadItems || []),\n      ].slice(0, 42);\n      yield localStorage.setItem('recentlyReadItems', JSON.stringify(this.recentlyReadItems));\n\n      yield this.removeItems(itemIds, 'randomItems');\n\n      return true;\n    } catch (ex) {\n      console.warn('RootStore.markItemsAsRead error:', ex);\n      toast(`mark item as read error: ${ex}`);\n      return false;\n    }\n  }\n\n  *removeItems(itemIds, field) {\n    for (const folder of this.folders || []) {\n      if (folder[field]?.some((item) => itemIds.includes(item.id))) {\n        folder[field] = folder[field].filter((item) => !itemIds.includes(item.id));\n        yield localStorage.setItem(`${field}:${folder.id}`, JSON.stringify(folder[field]));\n      }\n    }\n  }\n}\n\nexport const RootStoreContext = React.createContext(null);\n\nexport function useRootStore() {\n  return React.useContext(RootStoreContext);\n}\n"],"sourceRoot":""}