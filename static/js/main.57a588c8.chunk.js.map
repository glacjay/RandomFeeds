{"version":3,"sources":["RootStore.js","pages/FolderPage.js","pages/ItemPage.js","utils/api2.js","pages/LoginPage.js","pages/IndexPage.js","App.js","serviceWorker.js","index.js","widgets/ItemActions.js"],"names":["RootStore","token","folders","recentlyReadItems","mobx","this","localStorage","getItem","api2","JSON","parse","forEach","folder","loadItemsFromLocal","console","warn","toast","account","password","post","Email","Passwd","result","json","split","filter","l","line","idx","indexOf","substr","Auth","Error","setItem","get","tags","tag","test","id","subscriptions","sub","categories","some","cat","loadUnreadCounts","stringify","map","randomItems","totalUnreadCounts","bq_total_unreads","unreadCounts","unreadcounts","folderId","replace","count","find","c","unreadCount","subCount","reloadItems","f","i","length","j","Math","floor","random","totalUnreadCount","reduce","acc","feeds","Object","values","Promise","all","keys","subId","a","output","s","xt","r","n","itemRefs","newItems","items","arr","item","itemIds","join","removeItems","field","includes","RootStoreContext","React","createContext","useRootStore","useContext","observer","props","rootStore","qs","location","search","slice","useEffect","init","loadItems","useState","isSubmitting","setIsSubmitting","className","style","paddingBottom","margin","marginBottom","border","borderRadius","padding","to","title","marginTop","justifyContent","fontSize","color","origin","author","dayjs","updated","format","height","position","bottom","left","right","zIndex","onClick","markItemsAsRead","disabled","flex","itemId","loadedItems","contentElement","summary","content","preprocessingInstructions","shouldPreprocessNode","node","name","preprocessNode","attribs","processingInstructions","shouldProcessNode","processNode","HtmlToReact","ProcessNodeDefinitions","processDefaultNode","HtmlToReactParser","parseWithInstructions","href","canonical","target","rel","background","fontWeight","dangerouslySetInnerHTML","__html","history","buttonStyle","api","axios","create","baseURL","timeout","request","method","url","args","options","actualArgs","headers","Authorization","data","params","log","toUpperCase","response","status","push","state","setState","display","gridTemplateColumns","rowGap","columnGap","value","onChange","e","type","login","goBack","gridColumn","loadFolders","autoClose","closeButton","transition","cssTransition","enter","exit","duration","hideProgressBar","toastClassName","bodyClassName","HistoryGetter","path","component","require","default","useHistory","Boolean","window","hostname","match","ReactDOM","render","StrictMode","Provider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","ItemActions"],"mappings":"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","file":"static/js/main.57a588c8.chunk.js","sourcesContent":["import * as mobx from 'mobx';\nimport React from 'react';\nimport { toast } from 'react-toastify';\nimport api2 from 'src/utils/api2';\n\nexport default class RootStore {\n  token = null;\n  folders = null;\n  recentlyReadItems = null;\n\n  constructor() {\n    mobx.makeAutoObservable(this);\n  }\n\n  *init() {\n    try {\n      const token = yield localStorage.getItem('token');\n      this.token = token;\n      api2.token = token;\n\n      this.folders = JSON.parse(yield localStorage.getItem('folders'));\n      this.folders.forEach((folder) => this.loadItemsFromLocal(folder));\n    } catch (ex) {\n      console.warn('RootStore.init error:', ex);\n      toast(`init error: ${ex}`);\n    }\n  }\n\n  *login(account, password) {\n    try {\n      const result = yield api2.post('/accounts/ClientLogin', { Email: account, Passwd: password });\n      const json = {};\n      result\n        .split('\\n')\n        .filter((l) => l)\n        .forEach((line) => {\n          const idx = line.indexOf('=');\n          if (idx > 0) {\n            json[line.substr(0, idx)] = line.substr(idx + 1);\n          } else {\n            json[line] = true;\n          }\n        });\n      if (!json.Auth) {\n        throw new Error('account or password incorrect');\n      }\n\n      this.token = json.Auth;\n      yield localStorage.setItem('token', this.token);\n      api2.token = this.token;\n      return true;\n    } catch (ex) {\n      console.warn('RootStore.login error:', ex);\n      toast(`login failed: ${ex}`);\n      return false;\n    }\n  }\n\n  get loadedItems() {\n    const items = {};\n    for (const folder of this.folders || []) {\n      for (const item of folder.randomItems || []) {\n        items[item.id] = item;\n      }\n    }\n    return items;\n  }\n\n  *loadFolders() {\n    try {\n      if (!this.token) {\n        return;\n      }\n\n      this.folders = (yield api2.get('/reader/api/0/tag/list?output=json')).tags.filter((tag) =>\n        /\\/label\\//.test(tag.id),\n      );\n\n      const subscriptions = (yield api2.get('/reader/api/0/subscription/list?output=json'))\n        .subscriptions;\n      for (const folder of this.folders) {\n        folder.subscriptions = subscriptions.filter((sub) =>\n          sub.categories?.some((cat) => cat.id === folder?.id),\n        );\n      }\n\n      yield this.loadUnreadCounts(this.folders);\n      this.folders.forEach((folder) => this.loadItemsFromLocal(folder));\n\n      yield localStorage.setItem(\n        'folders',\n        JSON.stringify(\n          mobx.toJS(this.folders?.map((folder) => ({ ...folder, randomItems: null }))),\n        ),\n      );\n    } catch (ex) {\n      console.warn('RootStore.loadFolders error:', ex);\n      toast(`load folders error: ${ex}`);\n    }\n  }\n\n  *loadUnreadCounts(folders) {\n    const result = yield api2.get('/reader/api/0/unread-count?output=json');\n    this.totalUnreadCounts = result.bq_total_unreads;\n    const unreadCounts = result.unreadcounts;\n    for (const folder of folders) {\n      const folderId = folder.id?.replace(/\\d+/, '-');\n      const count = unreadCounts.find((c) => c.id === folderId);\n      if (count) {\n        folder.unreadCount = count.count;\n      }\n\n      for (const sub of folder.subscriptions || []) {\n        const subCount = unreadCounts.find((c) => c.id === sub.id);\n        if (subCount) {\n          sub.unreadCount = subCount.count;\n        }\n      }\n    }\n  }\n\n  *loadItemsFromLocal(folder) {\n    let randomItems = yield localStorage.getItem(`randomItems:${folder.id}`);\n    if (randomItems) {\n      folder.randomItems = JSON.parse(randomItems);\n      return;\n    }\n  }\n\n  *loadItems({ folderId, reloadItems }) {\n    try {\n      if (!this.token || !folderId) {\n        return;\n      }\n      const folder = this.folders?.find((f) => f.id === folderId);\n      if (!folder) {\n        return;\n      }\n\n      if (reloadItems) {\n        yield this.loadUnreadCounts([folder]);\n        folder.randomItems = null;\n      }\n\n      let randomItems = folder.randomItems;\n      if (randomItems) return;\n\n      if (!reloadItems) {\n        yield this.loadItemsFromLocal(folder);\n        if (folder.randomItems) {\n          return;\n        }\n      }\n\n      const subscriptions = [...folder.subscriptions.filter((sub) => sub.unreadCount > 0)];\n      for (let i = subscriptions.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [subscriptions[i], subscriptions[j]] = [subscriptions[j], subscriptions[i]];\n      }\n\n      let totalUnreadCount = subscriptions.reduce((acc, sub) => acc + sub.unreadCount, 0);\n      const feeds = {};\n      for (\n        let i = 0;\n        Object.values(feeds).reduce((acc, c) => acc + c, 0) < 42 && totalUnreadCount > 0;\n        i = (i + 1) % subscriptions.length\n      ) {\n        if (!feeds[subscriptions[i].id]) {\n          feeds[subscriptions[i].id] = 0;\n        }\n        if (feeds[subscriptions[i].id] < subscriptions[i].unreadCount) {\n          feeds[subscriptions[i].id] += 1;\n        }\n        totalUnreadCount -= 1;\n      }\n\n      const newItems = yield Promise.all(\n        Object.keys(feeds).map(\n          async (subId) =>\n            (\n              await api2.get('/reader/api/0/stream/items/ids', {\n                output: 'json',\n                s: subId,\n                xt: 'user/-/state/com.google/read',\n                r: 'o',\n                n: feeds[subId],\n              })\n            ).itemRefs,\n        ),\n      );\n      folder.items = newItems.reduce((acc, arr) => [...acc, ...arr], []);\n\n      randomItems = yield Promise.all(\n        folder.items.map(async (item) => ({\n          ...(await api2.get(`/reader/api/0/stream/items/contents?output=json&i=${item.id}`))\n            .items[0],\n          id: item.id,\n        })),\n      );\n      folder.randomItems = randomItems;\n      yield localStorage.setItem(`randomItems:${folder.id}`, JSON.stringify(randomItems));\n    } catch (ex) {\n      console.warn('RootStore.loadItems error:', ex);\n      toast(`load items error: ${ex}`);\n    }\n  }\n\n  *markItemsAsRead(itemIds) {\n    try {\n      if (!this.token || !(itemIds?.length > 0)) {\n        return false;\n      }\n\n      yield api2.post(`/reader/api/0/edit-tag?${itemIds.map((id) => `i=${id}`).join('&')}`, {\n        a: 'user/-/state/com.google/read',\n      });\n\n      yield this.removeItems(itemIds, 'randomItems');\n\n      return true;\n    } catch (ex) {\n      console.warn('RootStore.markItemsAsRead error:', ex);\n      toast(`mark item as read error: ${ex}`);\n      return false;\n    }\n  }\n\n  *removeItems(itemIds, field) {\n    for (const folder of this.folders || []) {\n      if (folder[field]?.some((item) => itemIds.includes(item.id))) {\n        folder[field] = folder[field].filter((item) => !itemIds.includes(item.id));\n        yield localStorage.setItem(`${field}:${folder.id}`, JSON.stringify(folder[field]));\n      }\n    }\n  }\n}\n\nexport const RootStoreContext = React.createContext(null);\n\nexport function useRootStore() {\n  return React.useContext(RootStoreContext);\n}\n","import dayjs from 'dayjs';\nimport { observer } from 'mobx-react';\nimport qs from 'qs';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useRootStore } from 'src/RootStore';\nimport ItemActions from 'src/widgets/ItemActions';\n\nexport default observer(function FolderPage(props) {\n  const rootStore = useRootStore();\n\n  const query = qs.parse(props.location.search.slice(1));\n  const { id: folderId } = query;\n  React.useEffect(() => {\n    const init = async () => {\n      await rootStore.init();\n      await rootStore.loadItems({ folderId });\n    };\n    init();\n  }, [rootStore, folderId]);\n\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n\n  const folder = rootStore.folders?.find((f) => f.id === folderId);\n  if (!folder) return null;\n\n  return (\n    <div className=\"flex-column\" style={{ paddingBottom: 4 }}>\n      <div style={{ margin: '4px 4px 0' }}>\n        {folder?.id}：{folder?.randomItems?.length}/{folder?.unreadCount}\n      </div>\n\n      {folder?.randomItems?.map((item) => (\n        <div\n          key={item.id}\n          style={{\n            margin: 4,\n            marginBottom: 0,\n            border: '1px solid black',\n            borderRadius: 4,\n            padding: 8,\n          }}\n        >\n          <Link to={`/Item?id=${item.id}`}>\n            <div>{item.title}</div>\n            <div\n              className=\"flex-row align-center\"\n              style={{ marginTop: 8, justifyContent: 'space-between', fontSize: 12, color: 'gray' }}\n            >\n              <div>\n                {item.origin?.title} | {item.author}\n              </div>\n              <div>{dayjs(item.updated * 1000).format('YYYY-MM-DD HH:mm')}</div>\n            </div>\n          </Link>\n          <div\n            className=\"flex-row align-center\"\n            style={{ marginTop: 8, justifyContent: 'flex-end' }}\n          >\n            <ItemActions\n              item={item}\n              isSubmitting={isSubmitting}\n              setIsSubmitting={setIsSubmitting}\n            />\n          </div>\n        </div>\n      ))}\n\n      <div style={{ height: 50 }} />\n      <div\n        className=\"flex-row\"\n        style={{ position: 'fixed', bottom: 0, left: 0, right: 0, zIndex: 7, height: 50 }}\n      >\n        <button\n          onClick={async () => {\n            setIsSubmitting(true);\n            await rootStore.markItemsAsRead(folder.randomItems.map((item) => item.id));\n            await rootStore.loadItems({ folderId });\n            setIsSubmitting(false);\n          }}\n          disabled={isSubmitting}\n          style={{ flex: 1 }}\n        >\n          mark them as read\n        </button>\n        <button\n          onClick={() => {\n            setIsSubmitting(true);\n            rootStore.loadItems({ folderId, reloadItems: true });\n            setIsSubmitting(false);\n          }}\n          disabled={isSubmitting}\n          style={{ flex: 1 }}\n        >\n          reload random items\n        </button>\n      </div>\n    </div>\n  );\n});\n","import dayjs from 'dayjs';\nimport HtmlToReact, { Parser as HtmlToReactParser } from 'html-to-react';\nimport { observer } from 'mobx-react';\nimport qs from 'qs';\nimport React from 'react';\nimport { useRootStore } from 'src/RootStore';\nimport ItemActions from 'src/widgets/ItemActions';\n\nexport default observer(function ItemPage(props) {\n  const rootStore = useRootStore();\n  React.useEffect(() => {\n    rootStore.init();\n  }, [rootStore]);\n\n  const query = qs.parse(props.location.search.slice(1));\n  const { id: itemId } = query;\n  const item = rootStore.loadedItems[itemId];\n\n  const [isSubmitting, setIsSubmitting] = React.useState(false);\n\n  let contentElement = null;\n  if (item?.summary?.content) {\n    const preprocessingInstructions = [\n      {\n        shouldPreprocessNode: (node) => node.name === 'img',\n        preprocessNode: (node) => {\n          node.attribs = {\n            ...node.attribs,\n            style: `${node.attribs?.style || ''}; max-width: 100%; height: auto;`,\n          };\n        },\n      },\n      {\n        shouldPreprocessNode: (node) => node.name === 'pre',\n        preprocessNode: (node) => {\n          node.attribs = {\n            ...node.attribs,\n            style: `${node.attribs?.style || ''};\n              border: 1px solid lightgray;\n              padding: 2px;\n              overflow-x: auto;\n              white-space: pre;\n              font-size: 0.8rem;\n            `,\n          };\n        },\n      },\n    ];\n    const processNodeDefinitions = new HtmlToReact.ProcessNodeDefinitions(React);\n    const processingInstructions = [\n      {\n        shouldProcessNode: (node) => true,\n        processNode: processNodeDefinitions.processDefaultNode,\n      },\n    ];\n    const parser = new HtmlToReactParser();\n    contentElement = parser.parseWithInstructions(\n      item.summary.content,\n      () => true,\n      processingInstructions,\n      preprocessingInstructions,\n    );\n  }\n\n  return (\n    <div className=\"flex-column\">\n      <a\n        href={item?.canonical?.[0]?.href}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"flex-column\"\n        style={{\n          background: 'lightgray',\n          padding: 8,\n        }}\n      >\n        <div style={{ fontWeight: 'bold' }}>{item?.title}</div>\n        <div\n          className=\"flex-row align-center\"\n          style={{ marginTop: 8, justifyContent: 'space-between', fontSize: 12, color: 'gray' }}\n        >\n          <div>\n            {item?.origin?.title} | {item?.author}\n          </div>\n          <div>{dayjs(item?.updated * 1000).format('YYYY-MM-DD HH:mm')}</div>\n        </div>\n      </a>\n\n      <div style={{ margin: 8 }}>\n        {contentElement || <div dangerouslySetInnerHTML={{ __html: item?.summary?.content }} />}\n      </div>\n\n      <div style={{ height: 100 }} />\n      <div\n        className=\"flex-row\"\n        style={{ position: 'fixed', bottom: 0, left: 0, right: 0, zIndex: 7, height: 50 }}\n      >\n        <ItemActions\n          item={item}\n          history={props.history}\n          isSubmitting={isSubmitting}\n          setIsSubmitting={setIsSubmitting}\n          buttonStyle={{ flex: 1 }}\n        />\n      </div>\n    </div>\n  );\n});\n","import axios from 'axios';\nimport qs from 'qs';\n\nconst api2 = {};\n\nlet api = axios.create({\n  baseURL: 'https://fever.glacjay.info',\n  timeout: 30000,\n});\n\napi2.request = async (method, url, args, options) => {\n  try {\n    const actualArgs = {\n      ...args,\n    };\n    const headers = {\n      ...(api2.token ? { Authorization: `GoogleLogin auth=${api2.token}` } : {}),\n    };\n    const result = (\n      await api.request({\n        method,\n        url,\n        ...(method === 'post' ? { data: qs.stringify(actualArgs) } : { params: actualArgs }),\n        headers,\n      })\n    ).data;\n    if (options?.log !== false) {\n      console.log(method.toUpperCase(), url, args, result);\n    }\n    return result;\n  } catch (error) {\n    console.warn(method.toUpperCase(), url, args, error);\n    if (error?.response?.status === 401) {\n      api2.token = null;\n      if (api2.history?.push) {\n        api2.history.push('/Login');\n      }\n      return;\n    }\n    throw error;\n  }\n};\n\napi2.get = async (url, args, options) => {\n  return api2.request('get', url, args, options);\n};\napi2.post = async (url, args, options) => {\n  return api2.request('post', url, args, options);\n};\n\nexport default api2;\n","import { observer } from 'mobx-react';\nimport React from 'react';\nimport { useRootStore } from 'src/RootStore';\n\nexport default observer(function LoginPage(props) {\n  const rootStore = useRootStore();\n\n  const [state, setState] = React.useState({\n    account: null,\n    password: null,\n    isSubmitting: false,\n  });\n\n  return (\n    <div\n      style={{\n        margin: 16,\n        display: 'grid',\n        gridTemplateColumns: 'auto 1fr',\n        rowGap: 16,\n        columnGap: 16,\n      }}\n    >\n      <div>account</div>\n      <input\n        value={state.account ?? ''}\n        onChange={(e) => setState({ ...state, account: e.target.value || null })}\n      />\n\n      <div>password</div>\n      <input\n        type=\"password\"\n        value={state.password ?? ''}\n        onChange={(e) => setState({ ...state, password: e.target.value || null })}\n      />\n\n      <button\n        onClick={async () => {\n          setState({ ...state, isSubmitting: true });\n          if (await rootStore.login(state.account, state.password)) {\n            props.history.goBack();\n          }\n          setState({ ...state, isSubmitting: false });\n        }}\n        disabled={state.isSubmitting}\n        style={{ gridColumn: '1 / span 2', padding: 8, fontSize: 14 }}\n      >\n        login\n      </button>\n    </div>\n  );\n});\n","import { observer } from 'mobx-react';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { useRootStore } from 'src/RootStore';\n\nexport default observer(function IndexPage(props) {\n  const rootStore = useRootStore();\n  React.useEffect(() => {\n    const init = async () => {\n      await rootStore.init();\n      await rootStore.loadFolders();\n    };\n    init();\n  }, [rootStore, rootStore.token]);\n\n  if (!rootStore.token) {\n    return (\n      <Link to=\"/Login\" style={{ margin: 8, border: '1px solid black', padding: 16 }}>\n        login\n      </Link>\n    );\n  }\n\n  return (\n    <div className=\"flex-column\">\n      <div style={{ margin: '4px 4px 0' }}>未读：{rootStore.totalUnreadCounts}</div>\n\n      {rootStore.folders?.map((folder) => (\n        <Link\n          key={folder.id}\n          to={`/Folder?id=${folder.id}`}\n          style={{ margin: '4px 4px 0', border: '1px solid black', borderRadius: 4, padding: 8 }}\n        >\n          {folder.id} ({folder.unreadCount})\n        </Link>\n      ))}\n    </div>\n  );\n});\n","import { observer } from 'mobx-react';\nimport React from 'react';\nimport { HashRouter, Route, Switch, useHistory } from 'react-router-dom';\nimport { cssTransition, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.min.css';\nimport api2 from 'src/utils/api2';\n\nexport default observer(function App() {\n  return (\n    <div>\n      <ToastContainer\n        autoClose={4000}\n        closeButton={false}\n        transition={cssTransition({\n          enter: 'slideInDown',\n          exit: 'slideOutUp',\n          duration: 300,\n        })}\n        hideProgressBar\n        toastClassName=\"toast-border\"\n        bodyClassName=\"toast-body\"\n      />\n\n      <HashRouter>\n        <HistoryGetter />\n        <Switch>\n          <Route path=\"/Folder\" component={require('src/pages/FolderPage').default} />\n          <Route path=\"/Item\" component={require('src/pages/ItemPage').default} />\n\n          <Route path=\"/Login\" component={require('src/pages/LoginPage').default} />\n          <Route path=\"/\" component={require('src/pages/IndexPage').default} />\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n});\n\nfunction HistoryGetter() {\n  const history = useHistory();\n\n  React.useEffect(() => {\n    api2.history = history;\n  }, [history]);\n\n  return null;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport RootStore, { RootStoreContext } from 'src/RootStore';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <RootStoreContext.Provider value={new RootStore()}>\n      <App />\n    </RootStoreContext.Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Fragment } from 'react';\nimport { useRootStore } from 'src/RootStore';\n\nexport default function ItemActions(props) {\n  const rootStore = useRootStore();\n  const { item, isSubmitting, setIsSubmitting } = props;\n\n  return (\n    <Fragment>\n      <button\n        onClick={async () => {\n          setIsSubmitting(true);\n          if (await rootStore.markItemsAsRead([item?.id])) {\n            if (props.history?.goBack) {\n              props.history.goBack();\n            }\n          }\n          setIsSubmitting(false);\n        }}\n        disabled={isSubmitting}\n        style={{ padding: '4px 8px', ...props.buttonStyle }}\n      >\n        mark as read\n      </button>\n      <a\n        href={item?.canonical?.[0]?.href}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"flex-row justify-center align-center\"\n        style={{\n          border: '1px solid lightgray',\n          borderRadius: 4,\n          background: 'white',\n          padding: '4px 8px',\n          ...props.buttonStyle,\n        }}\n      >\n        original link\n      </a>\n      <button\n        onClick={() => {\n          rootStore.removeItems([item?.id], 'randomItems');\n          if (props.history?.goBack) {\n            props.history.goBack();\n          }\n        }}\n        disabled={isSubmitting}\n        style={{ padding: '4px 8px', ...props.buttonStyle }}\n      >\n        later\n      </button>\n    </Fragment>\n  );\n}\n"],"sourceRoot":""}